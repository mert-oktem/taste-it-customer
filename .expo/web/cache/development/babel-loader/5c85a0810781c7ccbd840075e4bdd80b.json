{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/tabs/ContactTab.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport H1 from \"../texts/H1\";\nimport { postCustomerInquiry } from \"../../services/api\";\n\nvar ContactTab = function ContactTab(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    email: \"\",\n    name: \"\",\n    phoneNumber: \"\",\n    subject: \"\",\n    body: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var textInputNameChange = function textInputNameChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      name: val\n    }));\n  };\n\n  var textInputEmailChange = function textInputEmailChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      email: val\n    }));\n  };\n\n  var textInputPhoneNumberChange = function textInputPhoneNumberChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      phoneNumber: val\n    }));\n  };\n\n  var textInputSubjectChange = function textInputSubjectChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      subject: val\n    }));\n  };\n\n  var textInputBodyChange = function textInputBodyChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      body: val\n    }));\n  };\n\n  var onInquiryHandle = function onInquiryHandle() {\n    return _regeneratorRuntime.async(function onInquiryHandle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.email.length == 0 || data.body.length == 0 || data.subject.length == 0 || data.name.length == 0 || data.phoneNumber.length == 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [{\n              text: \"Okay\"\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            postCustomerInquiry(data.email, data.name, data.subject, data.body, data.phoneNumber).then(function (res) {\n              console.log(res);\n              Alert.alert(\"Your Inquiry is submitted\", \"Thank you\", [{\n                text: \"Ok\"\n              }]);\n              setData(_objectSpread(_objectSpread({}, data), {}, {\n                email: \"\",\n                name: \"\",\n                phoneNumber: \"\",\n                subject: \"\",\n                body: \"\"\n              }));\n            }, function (err) {\n              console.log(err);\n              Alert.alert(\"Error\", \"Something went wrong! \" + err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), React.createElement(H1, {\n    h1Text: \"Contact Us\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"Leave us a message, we will get in touch with you as soon as possible.\"), React.createElement(TextInput, {\n    placeholder: \"Name\",\n    textContentType: \"name\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputNameChange(val);\n    },\n    style: styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    textContentType: \"emailAddress\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputEmailChange(val);\n    },\n    style: styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Mobile\",\n    textContentType: \"none\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputPhoneNumberChange(val);\n    },\n    style: styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Subject\",\n    textContentType: \"none\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputSubjectChange(val);\n    },\n    style: styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Message\",\n    textContentType: \"none\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputBodyChange(val);\n    },\n    style: styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Submit\",\n    type: \"submit\",\n    onPress: function onPress() {\n      onInquiryHandle();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 8\n    }\n  }));\n};\n\nexport default ContactTab;\nexport var styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    margin: 24,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 36,\n    marginBottom: 16\n  },\n  textInput: {\n    height: Dimensions.get(\"screen\").width * 0.1,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"lightgray\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.01,\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.02,\n    fontSize: 23,\n    borderRadius: 20,\n    paddingLeft: 15\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/tabs/ContactTab.js"],"names":["React","H1","postCustomerInquiry","ContactTab","navigation","useState","email","name","phoneNumber","subject","body","data","setData","textInputNameChange","val","textInputEmailChange","textInputPhoneNumberChange","textInputSubjectChange","textInputBodyChange","onInquiryHandle","length","Alert","alert","text","then","res","console","log","err","styles","textInput","StyleSheet","create","center","flex","margin","justifyContent","alignItems","title","fontSize","marginBottom","height","Dimensions","get","width","backgroundColor","marginLeft","marginRight","marginTop","borderRadius","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text,\n  StyleSheet,\n  View,\n  ScrollView,\n  Dimensions,\n  Button,\n  TextInput,\n  Alert,\n  Image } from 'react-native';\nimport H1 from '../texts/H1';\nimport {postCustomerInquiry} from \"../../services/api\"\n\n\nconst ContactTab = ({navigation}) => {\n  const [data, setData] = React.useState({\n    email: \"\",\n    name: \"\",\n    phoneNumber: \"\",\n    subject: \"\",\n    body: \"\",\n  });\n  const textInputNameChange = (val) => {\n      setData({\n        ...data,\n        name: val,\n    })\n  };\n  const textInputEmailChange = (val) => {\n    setData({\n      ...data,\n      email: val,\n  })\n};\nconst textInputPhoneNumberChange = (val) => {\n  setData({\n    ...data,\n    phoneNumber: val,\n})\n};\nconst textInputSubjectChange = (val) => {\n  setData({\n    ...data,\n    subject: val,\n})\n};\nconst textInputBodyChange = (val) => {\n  setData({\n    ...data,\n    body: val,\n})\n};\nconst onInquiryHandle = async () => {\n  \n  if (\n    data.email.length == 0 ||\n    data.body.length == 0 ||\n    data.subject.length == 0 ||\n    data.name.length == 0 ||\n    data.phoneNumber.length == 0\n  ) {\n    Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [\n      { text: \"Okay\" },\n    ]);\n    return;\n  }\n  postCustomerInquiry(\n    data.email,\n    data.name,\n    data.subject,\n    data.body,\n    data.phoneNumber\n  ).then(\n    (res) => {\n      console.log(res)\n      Alert.alert(\"Your Inquiry is submitted\", \"Thank you\", [\n        { text: \"Ok\" },\n      ]);\n      setData({\n        ...data,\n        email: \"\",\n        name: \"\",\n        phoneNumber: \"\",\n        subject: \"\",\n        body: \"\",\n    })\n    },\n    (err) => {\n      console.log(err);\n      Alert.alert(\"Error\", `Something went wrong! ${err}`);\n    }\n  );\n};\n\n  return (\n    <ScrollView >\n    <Image />\n    <H1 h1Text=\"Contact Us\" />\n    <Text>Leave us a message, we will get in\n        touch with you as soon as possible.</Text>\n        <TextInput\n        placeholder={\"Name\"}\n        textContentType={\"name\"}\n        autoCapitalize=\"none\"\n        onChangeText={(val) => textInputNameChange(val)}\n        style={styles.textInput}\n      />\n      <TextInput\n        placeholder={\"Email\"}\n        textContentType={\"emailAddress\"}\n        autoCapitalize=\"none\"\n        onChangeText={(val) => textInputEmailChange(val)}\n        style={styles.textInput}\n      />\n      <TextInput\n        placeholder={\"Mobile\"}\n        textContentType={\"none\"}\n        autoCapitalize=\"none\"\n        onChangeText={(val) => textInputPhoneNumberChange(val)}\n        style={styles.textInput}\n      />\n      <TextInput\n        placeholder={\"Subject\"}\n        textContentType={\"none\"}\n        autoCapitalize=\"none\"\n        onChangeText={(val) => textInputSubjectChange(val)}\n        style={styles.textInput}\n      />\n      <TextInput\n        placeholder={\"Message\"}\n        textContentType={\"none\"}\n        autoCapitalize=\"none\"\n        onChangeText={(val) => textInputBodyChange(val)}\n        style={styles.textInput}\n      />\n       <Button\n          title=\"Submit\"\n          type=\"submit\"\n          onPress={() => {\n            onInquiryHandle();\n          }}\n        />\n  </ScrollView>\n  )\n}\n\n  \n\nexport default ContactTab;\n\nexport const styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    margin: 24,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 36,\n    marginBottom: 16\n  },\n  textInput: {\n    height: Dimensions.get(\"screen\").width * 0.1,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"lightgray\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.01,\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.02,\n    fontSize: 23,\n    borderRadius: 20,\n    paddingLeft: 15,\n  },\n});"]},"metadata":{},"sourceType":"module"}