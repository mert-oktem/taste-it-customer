{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/screens/profileScreens/EditDelivery.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport H1 from \"../../texts/H1\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport { getCities, getCountries, getProvinces, putDeliveryInfo } from \"../../../services/api\";\nvar useStyles = makeStyles({\n  inputField: {\n    borderRadius: 20,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    paddingLeft: 1,\n    marginBottom: 20\n  }\n});\nexport default function EditDelivery(_ref) {\n  var navigation = _ref.navigation;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"null\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      citydata = _React$useState2[0],\n      setCitydata = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"null\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      countrydata = _React$useState4[0],\n      setCountrydata = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"null\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      provincedata = _React$useState6[0],\n      setProvincedata = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    countryName: \"\",\n    provinceName: \"\",\n    cityName: \"\",\n    address: \"\",\n    postcode: \"\",\n    instructions: \"\",\n    isLoaded: true\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      data = _React$useState8[0],\n      setData = _React$useState8[1];\n\n  useEffect(function () {\n    getCities().then(function (res) {\n      var needDataCity = [];\n\n      for (var i = 0; i < res.length; i++) {\n        needDataCity.push({\n          label: res[i].cityDescription,\n          value: res[i].cityDescription\n        });\n      }\n\n      setCitydata(needDataCity);\n    }, function (err) {\n      console.log(err);\n    });\n    getProvinces().then(function (res) {\n      var needDataProvince = [];\n\n      for (var i = 0; i < res.length; i++) {\n        needDataProvince.push({\n          label: res[i].provinceDescription,\n          value: res[i].provinceDescription\n        });\n      }\n\n      setProvincedata(needDataProvince);\n    }, function (err) {\n      console.log(err);\n    });\n    getCountries().then(function (res) {\n      var needDataCountry = [];\n\n      for (var i = 0; i < res.length; i++) {\n        needDataCountry.push({\n          label: res[i].countryDescription,\n          value: res[i].countryDescription\n        });\n      }\n\n      setCountrydata(needDataCountry);\n    }, function (err) {\n      console.log(err);\n    });\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      isLoaded: false\n    }));\n  }, []);\n\n  var textInputCountryChange = function textInputCountryChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      countryName: val\n    }));\n  };\n\n  var textInputProvinceChange = function textInputProvinceChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      provinceName: val\n    }));\n  };\n\n  var textInputCityChange = function textInputCityChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      cityName: val\n    }));\n  };\n\n  var textInputAddressChange = function textInputAddressChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      address: val\n    }));\n  };\n\n  var textInputPostChange = function textInputPostChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      postcode: val\n    }));\n  };\n\n  var textInputInfoChange = function textInputInfoChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      instructions: val\n    }));\n  };\n\n  var deliveryHandle = function deliveryHandle() {\n    return _regeneratorRuntime.async(function deliveryHandle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.countryName.length == 0 || data.provinceName.length == 0 || data.cityName.length == 0 || data.address.length == 0 || data.postcode.length == 0 || data.instructions.length == 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [{\n              text: \"Okay\"\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            putDeliveryInfo(data.countryName, data.provinceName, data.cityName, data.address, data.postcode, data.instructions).then(function (res) {\n              console.log(res);\n              Alert.alert(\"User delivery Info saved successfully\", \"Thank you\", [{\n                text: \"Ok\"\n              }]);\n              navigation.navigate(\"Footer\");\n            }, function (err) {\n              console.log(err);\n              Alert.alert(\"Error\", \"Something went wrong! \" + err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (data.isLoaded) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(ScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, React.createElement(H1, {\n      h1Text: \"Delivery Information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, \"You say when and where\")), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, \"Country\"), React.createElement(RNPickerSelect, {\n      onValueChange: function onValueChange(value) {\n        return textInputCountryChange(value);\n      },\n      items: countrydata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, \"Province\"), React.createElement(RNPickerSelect, {\n      onValueChange: function onValueChange(value) {\n        return textInputProvinceChange(value);\n      },\n      items: provincedata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, \"City\"), React.createElement(RNPickerSelect, {\n      onValueChange: function onValueChange(value) {\n        return textInputCityChange(value);\n      },\n      items: citydata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    })), React.createElement(TextInput, {\n      placeholder: \"Address\",\n      textContentType: \"fullStreetAddress\",\n      autoCapitalize: \"none\",\n      onChangeText: function onChangeText(val) {\n        return textInputAddressChange(val);\n      },\n      style: styles.textInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"Postcode\",\n      textContentType: \"postalCode\",\n      autoCapitalize: \"none\",\n      onChangeText: function onChangeText(val) {\n        return textInputPostChange(val);\n      },\n      style: styles.textInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"Delivery Instruction\",\n      textContentType: \"none\",\n      autoCapitalize: \"none\",\n      onChangeText: function onChangeText(val) {\n        return textInputInfoChange(val);\n      },\n      style: styles.textInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      title: \"Done\",\n      type: \"submit\",\n      onPress: function onPress() {\n        return deliveryHandle();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    })));\n  }\n}\nvar styles = StyleSheet.create({\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1\n  },\n  text: {\n    marginBottom: 20\n  },\n  textInput: {\n    height: Dimensions.get(\"screen\").width * 0.1,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"lightgray\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.01,\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.02,\n    fontSize: 23,\n    borderRadius: 20,\n    paddingLeft: 15\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/screens/profileScreens/EditDelivery.js"],"names":["React","Component","useEffect","H1","makeStyles","RNPickerSelect","getCities","getCountries","getProvinces","putDeliveryInfo","useStyles","inputField","borderRadius","width","Dimensions","get","paddingLeft","marginBottom","EditDelivery","navigation","classes","useState","citydata","setCitydata","countrydata","setCountrydata","provincedata","setProvincedata","countryName","provinceName","cityName","address","postcode","instructions","isLoaded","data","setData","then","res","needDataCity","i","length","push","label","cityDescription","value","err","console","log","needDataProvince","provinceDescription","needDataCountry","countryDescription","textInputCountryChange","val","textInputProvinceChange","textInputCityChange","textInputAddressChange","textInputPostChange","textInputInfoChange","deliveryHandle","Alert","alert","text","navigate","flex","justifyContent","alignItems","styles","body","textInput","StyleSheet","create","marginLeft","marginTop","height","backgroundColor","marginRight","fontSize"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  ScrollView,\n  Dimensions,\n  Button,\n  TextInput,\n  Alert,\n  ActivityIndicator,\n} from \"react-native\";\nimport H1 from \"../../texts/H1\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport { getCities, getCountries, getProvinces, putDeliveryInfo } from \"../../../services/api\";\n\n\nconst useStyles = makeStyles({\n  inputField: {\n    borderRadius: 20,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    paddingLeft: 1,\n    marginBottom: 20,\n  },\n});\n\nexport default function EditDelivery({navigation}) {\n  const classes = useStyles();\n  const [citydata, setCitydata] = React.useState(\"null\");\n  const [countrydata, setCountrydata] = React.useState(\"null\");\n  const [provincedata, setProvincedata] = React.useState(\"null\");\n\n  const [data, setData] = React.useState({\n    countryName: \"\",\n    provinceName: \"\",\n    cityName: \"\",\n    address: \"\",\n    postcode: \"\",\n    instructions: \"\",\n    isLoaded: true,\n  });\n\n  useEffect(() => {\n    getCities().then(\n      (res) => {\n        let needDataCity = [];\n        for (let i = 0; i < res.length; i++) {\n          needDataCity.push({\n            label: res[i].cityDescription,\n            value: res[i].cityDescription,\n          });\n        }\n        setCitydata(needDataCity)\n       \n      }, (err) => {\n        console.log(err);\n      }\n    )\n    getProvinces().then(\n      (res) => {\n        let needDataProvince = [];\n        for (let i = 0; i < res.length; i++) {\n          needDataProvince.push({\n            label: res[i].provinceDescription,\n            value: res[i].provinceDescription,\n          });\n        }\n       setProvincedata(needDataProvince)\n      \n      }, (err) => {\n        console.log(err);\n      }\n    )\n    getCountries().then(\n      (res) => {\n        let needDataCountry = [];\n        for (let i = 0; i < res.length; i++) {\n          needDataCountry.push({\n            label: res[i].countryDescription,\n            value: res[i].countryDescription,\n          });\n        }\n       setCountrydata(needDataCountry)\n        \n      }, (err) => {\n        console.log(err);\n      }\n    )\n    setData({\n      ...data,\n      isLoaded: false,\n    });\n    \n}, []);\n\n  const textInputCountryChange = (val) => {\n    setData({\n      ...data,\n      countryName: val,\n    });\n  };\n  const textInputProvinceChange = (val) => {\n    setData({\n      ...data,\n      provinceName: val,\n    });\n  };\n  const textInputCityChange = (val) => {\n    setData({\n      ...data,\n      cityName: val,\n    });\n  };\n  const textInputAddressChange = (val) => {\n    setData({\n      ...data,\n      address: val,\n    });\n  };\n  const textInputPostChange = (val) => {\n    setData({\n      ...data,\n      postcode: val,\n    });\n  };\n  const textInputInfoChange = (val) => {\n    setData({\n      ...data,\n      instructions: val,\n    });\n  };\n  const deliveryHandle = async () => {\n    if (\n      data.countryName.length == 0 ||\n      data.provinceName.length == 0 ||\n      data.cityName.length == 0 ||\n      data.address.length == 0 ||\n      data.postcode.length == 0 ||\n      data.instructions.length == 0\n    ) {\n      Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [\n        { text: \"Okay\" },\n      ]);\n      return;\n    }\n\n    putDeliveryInfo(data.countryName, data.provinceName, data.cityName, data.address, data.postcode, data.instructions).then(\n      (res) => {\n        console.log(res)\n        Alert.alert(\"User delivery Info saved successfully\", \"Thank you\", [{ text: \"Ok\" }]);\n        navigation.navigate(\"Footer\")\n      },\n      (err) => {\n        console.log(err);\n        Alert.alert(\"Error\", `Something went wrong! ${err}`);\n      }\n    )\n    \n    \n  };\n  if (data.isLoaded) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  } else {\n  return (\n    <ScrollView>\n      <View style={styles.body}>\n        <View style={styles.text}>\n          <H1 h1Text=\"Delivery Information\" />\n          <Text>You say when and where</Text>\n        </View>\n        <View>\n            <Text>Country</Text>\n            <RNPickerSelect\n              onValueChange={(value) => textInputCountryChange(value)}\n              items={countrydata}\n            />\n          </View>\n          <View>\n            <Text>Province</Text>\n            <RNPickerSelect\n              onValueChange={(value) => textInputProvinceChange(value)}\n              items={provincedata}\n            />\n          </View>\n      \n        <View>\n            <Text>City</Text>\n            <RNPickerSelect\n              onValueChange={(value) => textInputCityChange(value)}\n              items={citydata}\n            />\n          </View>\n     \n        <TextInput\n          placeholder={\"Address\"}\n          textContentType={\"fullStreetAddress\"}\n          autoCapitalize=\"none\"\n          onChangeText={(val) => textInputAddressChange(val)}\n          style={styles.textInput}\n        />\n\n        <TextInput\n          placeholder={\"Postcode\"}\n          textContentType={\"postalCode\"}\n          autoCapitalize=\"none\"\n          onChangeText={(val) => textInputPostChange(val)}\n          style={styles.textInput}\n        />\n\n        <TextInput\n          placeholder={\"Delivery Instruction\"}\n          textContentType={\"none\"}\n          autoCapitalize=\"none\"\n          onChangeText={(val) => textInputInfoChange(val)}\n          style={styles.textInput}\n        />\n\n        <Button title=\"Done\" type=\"submit\" onPress={() => deliveryHandle()} />\n\n       \n      </View>\n\n    </ScrollView>\n  );\n  }\n}\n\nconst styles = StyleSheet.create({\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    // backgroundColor: \"lightgreen\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1,\n  },\n  text: {\n    marginBottom: 20,\n  },\n  textInput: {\n    height: Dimensions.get(\"screen\").width * 0.1,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"lightgray\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.01,\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.02,\n    fontSize: 23,\n    borderRadius: 20,\n    paddingLeft: 15,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}