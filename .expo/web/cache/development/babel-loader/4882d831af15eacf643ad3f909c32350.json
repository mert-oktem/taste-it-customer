{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { BASE_URL } from \"../config/api-config\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-community/async-storage';\nexport var getAllergy = function getAllergy() {\n  var url, res, allergies;\n  return _regeneratorRuntime.async(function getAllergy$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/allergens\";\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context.sent;\n          allergies = res.data;\n          return _context.abrupt(\"return\", allergies);\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          throw _context.t0;\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getCuisine = function getCuisine() {\n  var url, res, cuisines;\n  return _regeneratorRuntime.async(function getCuisine$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/cuisines\";\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context2.sent;\n          cuisines = res.data;\n          return _context2.abrupt(\"return\", cuisines);\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          throw _context2.t0;\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getDietType = function getDietType() {\n  var url, res, dietTypes;\n  return _regeneratorRuntime.async(function getDietType$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/dietTypes\";\n          _context3.prev = 1;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context3.sent;\n          dietTypes = res.data;\n          return _context3.abrupt(\"return\", dietTypes);\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](1);\n          throw _context3.t0;\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getSpiciness = function getSpiciness() {\n  var url, res, spiciness;\n  return _regeneratorRuntime.async(function getSpiciness$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/spiciness\";\n          _context4.prev = 1;\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context4.sent;\n          spiciness = res.data;\n          return _context4.abrupt(\"return\", spiciness);\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](1);\n          throw _context4.t0;\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var postChoice = function postChoice(choice) {\n  var token, body, headers, url, res, choiceData;\n  return _regeneratorRuntime.async(function postChoice$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          token = null;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 3:\n          token = _context5.sent;\n          body = {\n            \"choiceName\": \"\" + choice\n          };\n          headers = {\n            'Content-Type': 'application/json',\n            'Authorization': \"\" + token\n          };\n          url = BASE_URL + \"/customers/choice\";\n          _context5.prev = 7;\n          _context5.next = 10;\n          return _regeneratorRuntime.awrap(axios.post(url, body, {\n            headers: headers\n          }));\n\n        case 10:\n          res = _context5.sent;\n          choiceData = res.data;\n          return _context5.abrupt(\"return\", choiceData);\n\n        case 15:\n          _context5.prev = 15;\n          _context5.t0 = _context5[\"catch\"](7);\n          throw _context5.t0;\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[7, 15]], Promise);\n};","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/services/api.js"],"names":["BASE_URL","axios","AsyncStorage","getAllergy","url","get","res","allergies","data","getCuisine","cuisines","getDietType","dietTypes","getSpiciness","spiciness","postChoice","choice","token","getItem","body","headers","post","choiceData"],"mappings":";AAAA,SAASA,QAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,GADgB,GACPJ,QADO;AAAA;AAAA;AAAA,2CAIFC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAJE;;AAAA;AAIdE,UAAAA,GAJc;AAKdC,UAAAA,SALc,GAKFD,GAAG,CAACE,IALF;AAAA,2CAObD,SAPa;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAYL,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBL,UAAAA,GADkB,GACTJ,QADS;AAAA;AAAA;AAAA,2CAIJC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAJI;;AAAA;AAIhBE,UAAAA,GAJgB;AAKhBI,UAAAA,QALgB,GAKLJ,GAAG,CAACE,IALC;AAAA,4CAOfE,QAPe;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAYP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBP,UAAAA,GADmB,GACVJ,QADU;AAAA;AAAA;AAAA,2CAILC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAJK;;AAAA;AAIjBE,UAAAA,GAJiB;AAKjBM,UAAAA,SALiB,GAKLN,GAAG,CAACE,IALC;AAAA,4CAOhBI,SAPgB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAYP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBT,UAAAA,GADoB,GACXJ,QADW;AAAA;AAAA;AAAA,2CAINC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAJM;;AAAA;AAIlBE,UAAAA,GAJkB;AAKlBQ,UAAAA,SALkB,GAKNR,GAAG,CAACE,IALE;AAAA,4CAOjBM,SAPiB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAYP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,UAAAA,KADoB,GACZ,IADY;AAAA;AAAA,2CAEVf,YAAY,CAACgB,OAAb,CAAqB,WAArB,CAFU;;AAAA;AAExBD,UAAAA,KAFwB;AAGlBE,UAAAA,IAHkB,GAGX;AAAC,+BAAiBH;AAAlB,WAHW;AAIlBI,UAAAA,OAJkB,GAIR;AACd,4BAAgB,kBADF;AAEd,kCAAoBH;AAFN,WAJQ;AAQlBb,UAAAA,GARkB,GAQTJ,QARS;AAAA;AAAA;AAAA,2CAWJC,KAAK,CAACoB,IAAN,CAAWjB,GAAX,EAAgBe,IAAhB,EAAuB;AACvCC,YAAAA,OAAO,EAAEA;AAD8B,WAAvB,CAXI;;AAAA;AAWhBd,UAAAA,GAXgB;AAchBgB,UAAAA,UAdgB,GAcHhB,GAAG,CAACE,IAdD;AAAA,4CAefc,UAfe;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import { BASE_URL } from '../config/api-config'\nimport axios from 'axios'\nimport AsyncStorage from '@react-native-community/async-storage'\n\n\nexport const getAllergy = async () => {\n    const url = `${BASE_URL}/helpers/allergens`\n    try {\n  \n      const res = await axios.get(url)\n      const allergies = res.data\n  \n      return allergies\n    } catch (err) {\n      throw err\n    } \n  }\n  export const getCuisine = async () => {\n    const url = `${BASE_URL}/helpers/cuisines`\n    try {\n  \n      const res = await axios.get(url)\n      const cuisines = res.data\n  \n      return cuisines\n    } catch (err) {\n      throw err\n    } \n  }\n  export const getDietType = async () => {\n    const url = `${BASE_URL}/helpers/dietTypes`\n    try {\n  \n      const res = await axios.get(url)\n      const dietTypes = res.data\n  \n      return dietTypes\n    } catch (err) {\n      throw err\n    } \n  }\n  export const getSpiciness = async () => {\n    const url = `${BASE_URL}/helpers/spiciness`\n    try {\n  \n      const res = await axios.get(url)\n      const spiciness = res.data\n  \n      return spiciness\n    } catch (err) {\n      throw err\n    } \n  }\n  export const postChoice = async (choice) => {\n    let token = null;\n    token = await AsyncStorage.getItem(\"userToken\");\n    const body = {\"choiceName\": `${choice}`}\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `${token}`\n    }\n    const url = `${BASE_URL}/customers/choice`\n    try {\n  \n      const res = await axios.post(url, body,  {\n        headers: headers\n      })\n      const choiceData = res.data\n      return choiceData\n    } catch (err) {\n      throw err\n    } \n  }\n"]},"metadata":{},"sourceType":"module"}