{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/tabs/OrderStatus.js\";\n\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport H1 from \"../texts/H1\";\nimport { getCustomerActiveOrders } from \"../../services/api\";\n\nvar OrderStatus = function OrderStatus(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      orderStatusID = _React$useState2[0],\n      setOrderStatusID = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      orderSelected = _React$useState4[0],\n      setOrderSelected = _React$useState4[1];\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isLoaded = _React$useState6[0],\n      setIsLoaded = _React$useState6[1];\n\n  var orderID = route.params.orderID;\n  useEffect(function () {\n    getCustomerActiveOrders().then(function (res) {\n      for (var i = 0; i < res.length; i++) {\n        if (res[i].orderID === orderID) {\n          setOrderSelected(res[i]);\n          setOrderStatusID(res[i].orderStatusID);\n          setIsLoaded(false);\n        }\n      }\n    }), function (err) {\n      console.log(err);\n    };\n  }, [orderSelected, orderStatusID]);\n\n  if (isLoaded) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }));\n  } else if (orderStatusID === 1) {\n    return React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, React.createElement(H1, {\n      h1Text: \"Order Status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Confirming order with the restaurants\")));\n  } else if (orderStatusID === 2) {\n    return React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, React.createElement(H1, {\n      h1Text: \"Order Status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: styles.progress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.text1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"1\"), React.createElement(Text, {\n      style: styles.text2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"2\"), React.createElement(Text, {\n      style: styles.text2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"3\")), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Your food is being prepared.\"), React.createElement(Button, {\n      title: \"Order Received\",\n      color: \"gray\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })));\n  } else if (orderStatusID === 3) {\n    return React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, React.createElement(H1, {\n      h1Text: \"Order Status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.progress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.text1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"1\"), React.createElement(Text, {\n      style: styles.text1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"2\"), React.createElement(Text, {\n      style: styles.text2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"3\")), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Your food is being delivered.\"), React.createElement(Button, {\n      title: \"Order Received\",\n      color: \"gray\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    })));\n  } else if (orderStatusID === 4) {\n    return React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, React.createElement(H1, {\n      h1Text: \"Order Status\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: styles.progress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.text1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"1\"), React.createElement(Text, {\n      style: styles.text1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"2\"), React.createElement(Text, {\n      style: styles.text1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"3\")), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"Your food has been delivered.\"), React.createElement(Button, {\n      title: \"Order Received\",\n      color: \"purple\",\n      onPress: function onPress() {\n        navigation.navigate(\"RevealConfirm\", {\n          orderID: orderID\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nexport default OrderStatus;\nvar styles = StyleSheet.create({\n  text1: {\n    backgroundColor: \"purple\"\n  },\n  text2: {\n    backgroundColor: \"gray\"\n  },\n  progress: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/tabs/OrderStatus.js"],"names":["React","useEffect","H1","getCustomerActiveOrders","OrderStatus","route","navigation","useState","orderStatusID","setOrderStatusID","orderSelected","setOrderSelected","isLoaded","setIsLoaded","orderID","params","then","res","i","length","err","console","log","flex","justifyContent","alignItems","styles","progress","text1","text2","navigate","StyleSheet","create","backgroundColor","display","flexDirection"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  ScrollView,\n  Image,\n  Button, ActivityIndicator\n} from \"react-native\";\nimport H1 from \"../texts/H1\";\nimport {getCustomerActiveOrders} from \"../../services/api\"\n\nconst OrderStatus = ({ route, navigation }) => {\n  // const { orderStatusID } = route.params;\n  const [orderStatusID, setOrderStatusID] = React.useState(1)\n  const[orderSelected, setOrderSelected] = React.useState(null)\n  const[isLoaded, setIsLoaded] = React.useState(true)\n  const { orderID } = route.params;\n  // console.log(orderStatusID);\n  // console.log(orderID);\n\nuseEffect(() => {\n  \n  getCustomerActiveOrders().then(\n    (res) => {\n      // console.log(res)\n      for(let i=0; i<res.length;i++){\n        if(res[i].orderID === orderID){\n          setOrderSelected(res[i])\n          setOrderStatusID(res[i].orderStatusID)\n          setIsLoaded(false)\n        }\n      }\n    }\n  ), (err) => {\n    console.log(err)\n  }\n}, [orderSelected, orderStatusID]);\nif (isLoaded) {\n  return (\n    <View\n      style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n    >\n      <ActivityIndicator size=\"large\" />\n    </View>\n  );\n} \n\n\n  else if (orderStatusID === 1) {\n    return (\n      <ScrollView>\n        <H1 h1Text=\"Order Status\" />\n        {/* ***************** Order Status 1st Screen ***************** */}\n\n        <View>\n          <Image />\n          \n          <Text>Confirming order with the restaurants</Text>\n          \n        </View>\n      </ScrollView>\n    );\n  }\n  else if (orderStatusID === 2) {\n    return (\n      <ScrollView>\n        <H1 h1Text=\"Order Status\" />\n        {/* ***************** Order Status 1st Screen ***************** */}\n\n        <View>\n          <Image />\n          <View style={styles.progress}>\n            <Text style={styles.text1}>1</Text>\n            <Text style={styles.text2}>2</Text>\n            <Text style={styles.text2}>3</Text>\n          </View>\n          <Text>Your food is being prepared.</Text>\n          <Button title=\"Order Received\" color=\"gray\" />\n        </View>\n      </ScrollView>\n    );\n  }\n  else if(orderStatusID === 3){\n    return (\n      <ScrollView>\n        <H1 h1Text=\"Order Status\" />\n        \n        {/* ***************** Order Status 2nd Screen ***************** */}\n\n      <View>\n        <Image />\n        <View style={styles.progress}>\n          <Text style={styles.text1}>1</Text>\n          <Text style={styles.text1}>2</Text>\n          <Text style={styles.text2}>3</Text>\n        </View>\n        <Text>Your food is being delivered.</Text>\n        <Button title=\"Order Received\" color=\"gray\" />\n      </View>\n      </ScrollView>\n    );\n  }\n  else if(orderStatusID === 4){\n    return (\n      <ScrollView>\n        <H1 h1Text=\"Order Status\" />\n  \n        {/* ***************** Order Status 3rd Screen ***************** */}\n  \n        <View>\n          <Image />\n          <View style={styles.progress}>\n            <Text style={styles.text1}>1</Text>\n            <Text style={styles.text1}>2</Text>\n            <Text style={styles.text1}>3</Text>\n          </View>\n          <Text>Your food has been delivered.</Text>\n          <Button\n            title=\"Order Received\"\n            color=\"purple\"\n            onPress={() => {\n              navigation.navigate(\"RevealConfirm\", {orderID: orderID});\n            }}\n          />\n        </View>\n      </ScrollView>\n    );\n  }\n  \n};\n\nexport default OrderStatus;\nconst styles = StyleSheet.create({\n  text1: {\n    backgroundColor: \"purple\",\n  },\n  text2: {\n    backgroundColor: \"gray\",\n  },\n  progress: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}