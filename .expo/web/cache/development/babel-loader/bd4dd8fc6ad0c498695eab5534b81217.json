{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/screens/homeScreen/DishDetailScreen.js\";\n\nimport React, { useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport H1 from \"../../texts/H1\";\nimport { getCustomerActiveOrders } from \"../../../services/api\";\n\nvar DishDetailScreen = function DishDetailScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      orderSelected = _React$useState2[0],\n      setOrderSelected = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoaded = _React$useState4[0],\n      setIsLoaded = _React$useState4[1];\n\n  var orderID = route.params.orderID;\n  useEffect(function () {\n    getCustomerActiveOrders().then(function (res) {\n      for (var i = 0; i < res.length; i++) {\n        if (res[i].orderID === orderID) {\n          setOrderSelected(res[i]);\n          setIsLoaded(false);\n        }\n      }\n    }), function (err) {\n      console.log(err);\n    };\n  }, []);\n\n  if (isLoaded) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Your dish was\"), React.createElement(H1, {\n      h1Text: orderSelected.menuName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, orderSelected.menuDescription)), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Served by\"), React.createElement(H1, {\n      h1Text: orderSelected.restaurantName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, orderSelected.restaurantDescription)), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: styles.restaurantAddress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, orderSelected.address)), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: styles.restaurantAddress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, orderSelected.phoneNumber))), React.createElement(Button, {\n      title: \"Review & Feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default DishDetailScreen;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/screens/homeScreen/DishDetailScreen.js"],"names":["React","useEffect","H1","getCustomerActiveOrders","DishDetailScreen","route","navigation","useState","orderSelected","setOrderSelected","isLoaded","setIsLoaded","orderID","params","then","res","i","length","err","console","log","flex","justifyContent","alignItems","menuName","menuDescription","restaurantName","restaurantDescription","styles","restaurantAddress","address","phoneNumber","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  Button,\n  Image,\n  ScrollView,\n  StyleSheet,\n  Text,\n  View, ActivityIndicator\n} from \"react-native\";\nimport H1 from \"../../texts/H1\";\nimport {getCustomerActiveOrders} from \"../../../services/api\"\n\nconst DishDetailScreen = ({ route, navigation }) => {\n  const[orderSelected, setOrderSelected] = React.useState(null)\n  const[isLoaded, setIsLoaded] = React.useState(true)\n  const { orderID } = route.params;\n  useEffect(() => {\n    getCustomerActiveOrders().then(\n      (res) => {\n        for(let i=0; i<res.length;i++){\n          if(res[i].orderID === orderID){\n            setOrderSelected(res[i])\n            setIsLoaded(false)\n          }\n        }\n      }\n    ), (err) => {\n      console.log(err)\n    }\n   \n  }, [])\n  if (isLoaded) {\n    return (\n      <View\n        style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n      >\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  } else {\n    return (\n      <ScrollView>\n        <Image />\n        <View>\n          <Text>Your dish was</Text>\n          <H1 h1Text={orderSelected.menuName} />\n          <Text>\n            {orderSelected.menuDescription}\n          </Text>\n        </View>\n        <View>\n          <Text>Served by</Text>\n          <H1 h1Text={orderSelected.restaurantName} />\n          <Text>\n            {orderSelected.restaurantDescription}\n          </Text>\n        </View>\n        <View>\n          <View>\n            <Image />\n            <Text style={styles.restaurantAddress}>\n              {orderSelected.address}\n            </Text>\n          </View>\n          <View>\n            <Image />\n    <Text style={styles.restaurantAddress}>{orderSelected.phoneNumber}</Text>\n          </View>\n        </View>\n        <Button title=\"Review & Feedback\" />\n      </ScrollView>\n    );\n  }\n  \n};\n\nexport default DishDetailScreen;\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}