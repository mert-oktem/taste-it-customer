{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/screens/signUp/SignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { AuthContext } from \"../../Context\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport H1 from \"../../texts/H1\";\nexport default function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useContext = React.useContext(AuthContext),\n      signUp = _React$useContext.signUp;\n\n  var _React$useState = React.useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    isValidUser: true,\n    isValidFirst: true,\n    isValidLast: true,\n    isValidPhone: true,\n    isValidPassword: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var textInputChange = function textInputChange(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        email: val,\n        isValidUser: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        email: val,\n        isValidUser: false\n      }));\n    }\n  };\n\n  var textInputFirstChange = function textInputFirstChange(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        firstName: val,\n        isValidFirst: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        firstName: val,\n        isValidFirst: false\n      }));\n    }\n  };\n\n  var textInputLastChange = function textInputLastChange(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        lastName: val,\n        isValidLast: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        lastName: val,\n        isValidLast: false\n      }));\n    }\n  };\n\n  var textInputPhoneChange = function textInputPhoneChange(val) {\n    if (val.trim().length >= 6) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        phoneNumber: val,\n        isValidPhone: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        phoneNumber: val,\n        isValidPhone: false\n      }));\n    }\n  };\n\n  var handlePasswordChange = function handlePasswordChange(val) {\n    if (val.trim().length >= 8) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        password: val,\n        isValidPassword: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        password: val,\n        isValidPassword: false\n      }));\n    }\n  };\n\n  var handleValidUser = function handleValidUser(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidUser: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidUser: false\n      }));\n    }\n  };\n\n  var handleValidFirst = function handleValidFirst(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidFirst: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidFirst: false\n      }));\n    }\n  };\n\n  var handleValidLast = function handleValidLast(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidLast: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidLast: false\n      }));\n    }\n  };\n\n  var handleValidPhone = function handleValidPhone(val) {\n    if (val.trim().length >= 6) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPhone: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPhone: false\n      }));\n    }\n  };\n\n  var registerHandle = function registerHandle() {\n    var response, res, accessToken, error;\n    return _regeneratorRuntime.async(function registerHandle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.email.length == 0 || data.password.length == 0 || data.firstName.length == 0 || data.lastName.length == 0 || data.phoneNumber.length == 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [{\n              text: \"Okay\"\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/api/customers/\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: data.email,\n                password: data.password,\n                firstName: data.firstName,\n                lastName: data.lastName,\n                phoneNumber: data.phoneNumber\n              })\n            }));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            res = _context.sent;\n\n            if (!(response.status >= 200 && response.status < 300)) {\n              _context.next = 17;\n              break;\n            }\n\n            accessToken = res.token;\n            signUp(accessToken);\n            Alert.alert(\"User Registered\", \"Thank you\", [{\n              text: \"Ok\"\n            }]);\n            navigation.navigate(\"Root\", {\n              screen: \"WelcomeScreen2\"\n            });\n            _context.next = 20;\n            break;\n\n          case 17:\n            Alert.alert(\"Invalid Input!\", \"Something went wrong, Try again\", [{\n              text: \"Okay\"\n            }]);\n            error = res;\n            throw error;\n\n          case 20:\n            _context.next = 25;\n            break;\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 22]], Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../../../assets/foodIllustration/customerSide/SignUp2.jpg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, React.createElement(H1, {\n    h1Text: \"Set Up Your Profile.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.textChild,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Sign up to set up your profile\")), React.createElement(TextInput, {\n    placeholder: \"First Name\",\n    textContentType: \"name\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputFirstChange(val);\n    },\n    onEndEditing: function onEndEditing(e) {\n      return handleValidFirst(e.nativeEvent.text);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }), data.isValidFirst ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"First Name must be 4 characters long.\")), React.createElement(TextInput, {\n    placeholder: \"Last Name\",\n    textContentType: \"name\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputLastChange(val);\n    },\n    onEndEditing: function onEndEditing(e) {\n      return handleValidLast(e.nativeEvent.text);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }), data.isValidLast ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Last Name must be 4 characters long.\")), React.createElement(TextInput, {\n    placeholder: \"Phone Number\",\n    textContentType: \"name\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputPhoneChange(val);\n    },\n    onEndEditing: function onEndEditing(e) {\n      return handleValidPhone(e.nativeEvent.text);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }), data.isValidPhone ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, \"Phone Number should be more than 6 digits.\")), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    textContentType: \"emailAddress\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputChange(val);\n    },\n    onEndEditing: function onEndEditing(e) {\n      return handleValidUser(e.nativeEvent.text);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }), data.isValidUser ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, \"email must be 4 characters long.\")), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    textContentType: \"password\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return handlePasswordChange(val);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }), data.isValidPassword ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, \"Password must be 8 characters long.\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    type: \"submit\",\n    onPress: function onPress() {\n      registerHandle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"))));\n}\nvar styles = StyleSheet.create({\n  image: {\n    height: Dimensions.get(\"screen\").width * 0.7,\n    width: Dimensions.get(\"screen\").width,\n    backgroundColor: \"lightgray\"\n  },\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1\n  },\n  text: {\n    marginBottom: 20\n  },\n  textChild: {\n    color: \"#3E315A\",\n    lineHeight: 20\n  },\n  textInput: {\n    height: 50,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"#D4CDE3\",\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.03,\n    fontSize: 18,\n    borderRadius: 15,\n    paddingLeft: 15,\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  button: {\n    backgroundColor: \"#632DF1\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 15,\n    marginBottom: 30,\n    marginTop: 50\n  },\n  buttonText: {\n    color: \"white\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/screens/signUp/SignUp.js"],"names":["React","AuthContext","H1","SignUp","navigation","useContext","signUp","useState","email","password","firstName","lastName","phoneNumber","isValidUser","isValidFirst","isValidLast","isValidPhone","isValidPassword","data","setData","textInputChange","val","trim","length","textInputFirstChange","textInputLastChange","textInputPhoneChange","handlePasswordChange","handleValidUser","handleValidFirst","handleValidLast","handleValidPhone","registerHandle","Alert","alert","text","fetch","method","headers","Accept","body","JSON","stringify","response","json","res","status","accessToken","token","navigate","screen","error","console","log","styles","image","require","textChild","e","nativeEvent","textInput","errorMsg","button","buttonText","StyleSheet","create","height","Dimensions","get","width","backgroundColor","marginLeft","marginTop","marginBottom","color","lineHeight","marginRight","fontSize","borderRadius","paddingLeft","paddingTop","paddingBottom","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { AuthContext } from \"../../Context\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  ScrollView,\n  Image,\n  TextInput,\n  Button,\n  Alert,\n  TouchableOpacity,\n} from \"react-native\";\nimport H1 from \"../../texts/H1\";\n\nexport default function SignUp({ navigation }) {\n  const { signUp } = React.useContext(AuthContext);\n\n  const [data, setData] = React.useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    isValidUser: true,\n    isValidFirst: true,\n    isValidLast: true,\n    isValidPhone: true,\n    isValidPassword: true,\n  });\n\n  const textInputChange = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        email: val,\n        isValidUser: true,\n      });\n    } else {\n      setData({\n        ...data,\n        email: val,\n        isValidUser: false,\n      });\n    }\n  };\n  const textInputFirstChange = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        firstName: val,\n        isValidFirst: true,\n      });\n    } else {\n      setData({\n        ...data,\n        firstName: val,\n        isValidFirst: false,\n      });\n    }\n  };\n  const textInputLastChange = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        lastName: val,\n        isValidLast: true,\n      });\n    } else {\n      setData({\n        ...data,\n        lastName: val,\n        isValidLast: false,\n      });\n    }\n  };\n  const textInputPhoneChange = (val) => {\n    if (val.trim().length >= 6) {\n      setData({\n        ...data,\n        phoneNumber: val,\n        isValidPhone: true,\n      });\n    } else {\n      setData({\n        ...data,\n        phoneNumber: val,\n        isValidPhone: false,\n      });\n    }\n  };\n\n  const handlePasswordChange = (val) => {\n    if (val.trim().length >= 8) {\n      setData({\n        ...data,\n        password: val,\n        isValidPassword: true,\n      });\n    } else {\n      setData({\n        ...data,\n        password: val,\n        isValidPassword: false,\n      });\n    }\n  };\n\n  const handleValidUser = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        isValidUser: true,\n      });\n    } else {\n      setData({\n        ...data,\n        isValidUser: false,\n      });\n    }\n  };\n  const handleValidFirst = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        isValidFirst: true,\n      });\n    } else {\n      setData({\n        ...data,\n        isValidFirst: false,\n      });\n    }\n  };\n  const handleValidLast = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        isValidLast: true,\n      });\n    } else {\n      setData({\n        ...data,\n        isValidLast: false,\n      });\n    }\n  };\n\n  const handleValidPhone = (val) => {\n    if (val.trim().length >= 6) {\n      setData({\n        ...data,\n        isValidPhone: true,\n      });\n    } else {\n      setData({\n        ...data,\n        isValidPhone: false,\n      });\n    }\n  };\n  const registerHandle = async () => {\n    if (\n      data.email.length == 0 ||\n      data.password.length == 0 ||\n      data.firstName.length == 0 ||\n      data.lastName.length == 0 ||\n      data.phoneNumber.length == 0\n    ) {\n      Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [\n        { text: \"Okay\" },\n      ]);\n      return;\n    }\n\n    try {\n      let response = await fetch(\"http://localhost:5000/api/customers/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: data.email,\n          password: data.password,\n          firstName: data.firstName,\n          lastName: data.lastName,\n          phoneNumber: data.phoneNumber,\n        }),\n      });\n\n      const res = await response.json();\n\n      if (response.status >= 200 && response.status < 300) {\n        //Handle success\n        let accessToken = res.token;\n\n        //On success we will store the access_token in the AsyncStorage\n\n        // this.redirect('home');\n        signUp(accessToken);\n        Alert.alert(\"User Registered\", \"Thank you\", [{ text: \"Ok\" }]);\n        navigation.navigate(\"Root\", { screen: \"WelcomeScreen2\" });\n      } else {\n        Alert.alert(\"Invalid Input!\", \"Something went wrong, Try again\", [\n          { text: \"Okay\" },\n        ]);\n        //Handle error\n        let error = res;\n        throw error;\n      }\n    } catch (error) {\n      // this.setState({error: error});\n      console.log(error);\n      // this.setState({showProgress: false});\n    }\n  };\n\n  return (\n    <ScrollView>\n      <Image\n        style={styles.image}\n        source={require(\"../../../assets/foodIllustration/customerSide/SignUp2.jpg\")}\n      />\n      <View style={styles.body}>\n        <View style={styles.text}>\n          <H1 h1Text=\"Set Up Your Profile.\" />\n          <Text style={styles.textChild}>Sign up to set up your profile</Text>\n        </View>\n        <TextInput\n          placeholder={\"First Name\"}\n          textContentType={\"name\"}\n          autoCapitalize=\"none\"\n          // value=\"John\"\n          onChangeText={(val) => textInputFirstChange(val)}\n          onEndEditing={(e) => handleValidFirst(e.nativeEvent.text)}\n          style={styles.textInput}\n        />\n        {data.isValidFirst ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              First Name must be 4 characters long.\n            </Text>\n          </View>\n        )}\n        <TextInput\n          placeholder={\"Last Name\"}\n          textContentType={\"name\"}\n          autoCapitalize=\"none\"\n          // value=\"Remison\"\n          onChangeText={(val) => textInputLastChange(val)}\n          onEndEditing={(e) => handleValidLast(e.nativeEvent.text)}\n          style={styles.textInput}\n        />\n        {data.isValidLast ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              Last Name must be 4 characters long.\n            </Text>\n          </View>\n        )}\n        <TextInput\n          placeholder={\"Phone Number\"}\n          textContentType={\"name\"}\n          autoCapitalize=\"none\"\n          // value=\"234556778\"\n          onChangeText={(val) => textInputPhoneChange(val)}\n          onEndEditing={(e) => handleValidPhone(e.nativeEvent.text)}\n          style={styles.textInput}\n        />\n        {data.isValidPhone ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              Phone Number should be more than 6 digits.\n            </Text>\n          </View>\n        )}\n        <TextInput\n          placeholder={\"Email\"}\n          textContentType={\"emailAddress\"}\n          autoCapitalize=\"none\"\n          // value=\"johnRemi@hotmail.com\"\n          onChangeText={(val) => textInputChange(val)}\n          onEndEditing={(e) => handleValidUser(e.nativeEvent.text)}\n          style={styles.textInput}\n        />\n        {data.isValidUser ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              email must be 4 characters long.\n            </Text>\n          </View>\n        )}\n        <TextInput\n          placeholder={\"Password\"}\n          textContentType={\"password\"}\n          secureTextEntry={true}\n          autoCapitalize=\"none\"\n          // value=\"testpassword\"\n          onChangeText={(val) => handlePasswordChange(val)}\n          style={styles.textInput}\n        />\n        {data.isValidPassword ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              Password must be 8 characters long.\n            </Text>\n          </View>\n        )}\n\n        <TouchableOpacity\n          style={styles.button}\n          type=\"submit\"\n          onPress={() => {\n            registerHandle();\n          }}\n          // onPress={() => navigation.navigate(\"WelcomeScreen2\")}\n        >\n          <Text style={styles.buttonText}>Sign Up</Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    height: Dimensions.get(\"screen\").width * 0.7,\n    width: Dimensions.get(\"screen\").width,\n    backgroundColor: \"lightgray\",\n  },\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    // backgroundColor: \"lightgreen\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1,\n  },\n  text: {\n    marginBottom: 20,\n  },\n  textChild: {\n    color: \"#3E315A\",\n    lineHeight: 20,\n  },\n  textInput: {\n    height: 50,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"#D4CDE3\",\n    // marginLeft: Dimensions.get(\"screen\").width * 0.01,\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.03,\n    fontSize: 18,\n    borderRadius: 15,\n    paddingLeft: 15,\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  button: {\n    backgroundColor: \"#632DF1\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 15,\n    marginBottom: 30,\n    marginTop: 50,\n  },\n  buttonText: {\n    color: \"white\",\n    textAlign: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}