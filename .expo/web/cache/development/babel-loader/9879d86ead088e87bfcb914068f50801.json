{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/screens/onboardingScreens/flavourProfile/DietTypes.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { CheckBox } from \"react-native-elements\";\nimport { getDietType } from \"../../../../services/api\";\nimport { Button } from \"react-native-paper\";\n\nvar DietTypes = function (_Component) {\n  _inherits(DietTypes, _Component);\n\n  var _super = _createSuper(DietTypes);\n\n  function DietTypes(props) {\n    var _this;\n\n    _classCallCheck(this, DietTypes);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      newData: []\n    };\n    return _this;\n  }\n\n  _createClass(DietTypes, [{\n    key: \"onchecked\",\n    value: function onchecked(id) {\n      var data = this.props.dietTypes;\n      var index = data.findIndex(function (x) {\n        return x.id === id;\n      });\n      data[index].checked = !data[index].checked;\n      this.setState({\n        newData: data\n      });\n      this.props.updateDietTypes(data);\n    }\n  }, {\n    key: \"renderDietTypes\",\n    value: function renderDietTypes() {\n      var _this2 = this;\n\n      return this.props.dietTypes.map(function (item, key) {\n        return React.createElement(CheckBox, {\n          key: item.id,\n          onPress: function onPress() {\n            _this2.onchecked(item.id);\n          },\n          checked: item.checked,\n          title: item.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 10\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, this.renderDietTypes());\n    }\n  }]);\n\n  return DietTypes;\n}(Component);\n\nexport { DietTypes as default };\nvar styles = StyleSheet.create({\n  options: {\n    marginTop: 50,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/screens/onboardingScreens/flavourProfile/DietTypes.js"],"names":["React","Component","CheckBox","getDietType","Button","DietTypes","props","state","newData","id","data","dietTypes","index","findIndex","x","checked","setState","updateDietTypes","map","item","key","onchecked","styles","options","renderDietTypes","StyleSheet","create","marginTop","width","Dimensions","get","marginLeft","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,WAAT;AACA,SAASC,MAAT,QAAuB,oBAAvB;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC;AADG,KAAb;AAFiB;AAKlB;;;;8BACSC,E,EAAG;AAEX,UAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWK,SAAxB;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACG,SAAL,CAAe,UAAAC,CAAC;AAAA,eAAEA,CAAC,CAACL,EAAF,KAASA,EAAX;AAAA,OAAhB,CAAd;AACAC,MAAAA,IAAI,CAACE,KAAD,CAAJ,CAAYG,OAAZ,GAAsB,CAACL,IAAI,CAACE,KAAD,CAAJ,CAAYG,OAAnC;AACA,WAAKC,QAAL,CAAc;AACZR,QAAAA,OAAO,EAACE;AADI,OAAd;AAGA,WAAKJ,KAAL,CAAWW,eAAX,CAA2BP,IAA3B;AACD;;;sCACe;AAAA;;AACf,aAAO,KAAKJ,KAAL,CAAWK,SAAX,CAAqBO,GAArB,CAAyB,UAACC,IAAD,EAAOC,GAAP,EAAc;AAC5C,eACI,oBAAC,QAAD;AACA,UAAA,GAAG,EAAGD,IAAI,CAACV,EADX;AAEA,UAAA,OAAO,EAAE,mBAAI;AAAC,YAAA,MAAI,CAACY,SAAL,CAAeF,IAAI,CAACV,EAApB;AAAwB,WAFtC;AAGA,UAAA,OAAO,EAAEU,IAAI,CAACJ,OAHd;AAIA,UAAA,KAAK,EAAEI,IAAI,CAACC,GAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,OATM,CAAP;AAUD;;;6BAES;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,eAAL,EADH,CADF;AAKD;;;;EApCoCvB,S;;SAAlBI,S;AAuCrB,IAAMiB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,OAAO,EAAE;AACPI,IAAAA,SAAS,EAAE,EADJ;AAEPC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,GAFjC;AAGPG,IAAAA,UAAU,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAAiC,GAHtC;AAIPI,IAAAA,eAAe,EAAE;AAJV;AADsB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Text, StyleSheet, View, Dimensions} from \"react-native\";\nimport { CheckBox } from \"react-native-elements\";\nimport { getDietType } from \"../../../../services/api\";\nimport { Button } from \"react-native-paper\";\n\nexport default class DietTypes extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      newData:[],\n    };\n  }\n  onchecked(id){\n    // console.log(id)\n    const data = this.props.dietTypes\n    const index = data.findIndex(x=>x.id === id)\n    data[index].checked = !data[index].checked\n    this.setState({\n      newData:data\n    })\n    this.props.updateDietTypes(data)\n  }\n renderDietTypes(){\n   return this.props.dietTypes.map((item, key)=> {\n     return (\n         <CheckBox \n         key= {item.id}\n         onPress={()=>{this.onchecked(item.id)}}\n         checked={item.checked}\n         title={item.key}\n         />\n     )\n   })\n }\n \n  render() {\n    return (\n      <View style={styles.options}>\n        {this.renderDietTypes()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  options: {\n    marginTop: 50,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    backgroundColor: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}