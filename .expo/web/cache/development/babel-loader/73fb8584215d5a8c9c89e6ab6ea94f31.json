{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/screens/onboardingScreens/DeliveryInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport H1 from \"../../texts/H1\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport { getCities, getCountries, getProvinces } from \"../../../services/api\";\nvar useStyles = makeStyles({\n  inputField: {\n    borderRadius: 20,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    paddingLeft: 1,\n    marginBottom: 20\n  }\n});\nexport default function DeliveryInfo(_ref) {\n  var navigation = _ref.navigation;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"null\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      citydata = _React$useState2[0],\n      setCitydata = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"null\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      countrydata = _React$useState4[0],\n      setCountrydata = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"null\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      provincedata = _React$useState6[0],\n      setProvincedata = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    countryName: \"\",\n    provinceName: \"\",\n    cityName: \"\",\n    address: \"\",\n    postcode: \"\",\n    instructions: \"\",\n    isLoaded: true\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      data = _React$useState8[0],\n      setData = _React$useState8[1];\n\n  useEffect(function () {\n    getCities().then(function (res) {\n      var needDataCity = [];\n\n      for (var i = 0; i < res.length; i++) {\n        needDataCity.push({\n          label: res[i].cityDescription,\n          value: res[i].cityDescription\n        });\n      }\n\n      setCitydata(needDataCity);\n    }, function (err) {\n      console.log(err);\n    });\n    getProvinces().then(function (res) {\n      var needDataProvince = [];\n\n      for (var i = 0; i < res.length; i++) {\n        needDataProvince.push({\n          label: res[i].provinceDescription,\n          value: res[i].provinceDescription\n        });\n      }\n\n      setProvincedata(needDataProvince);\n    }, function (err) {\n      console.log(err);\n    });\n    getCountries().then(function (res) {\n      var needDataCountry = [];\n\n      for (var i = 0; i < res.length; i++) {\n        needDataCountry.push({\n          label: res[i].countryDescription,\n          value: res[i].countryDescription\n        });\n      }\n\n      setCountrydata(needDataCountry);\n    }, function (err) {\n      console.log(err);\n    });\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      isLoaded: false\n    }));\n  }, []);\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      userToken = _React$useState10[0],\n      setUserToken = _React$useState10[1];\n\n  var textInputCountryChange = function textInputCountryChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      countryName: val\n    }));\n  };\n\n  var textInputProvinceChange = function textInputProvinceChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      provinceName: val\n    }));\n  };\n\n  var textInputCityChange = function textInputCityChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      cityName: val\n    }));\n  };\n\n  var textInputAddressChange = function textInputAddressChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      address: val\n    }));\n  };\n\n  var textInputPostChange = function textInputPostChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      postcode: val\n    }));\n  };\n\n  var textInputInfoChange = function textInputInfoChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      instructions: val\n    }));\n  };\n\n  var deliveryHandle = function deliveryHandle() {\n    var token, response, res, error;\n    return _regeneratorRuntime.async(function deliveryHandle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.countryName.length == 0 || data.provinceName.length == 0 || data.cityName.length == 0 || data.address.length == 0 || data.postcode.length == 0 || data.instructions.length == 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [{\n              text: \"Okay\"\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            token = null;\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n          case 7:\n            token = _context.sent;\n            setUserToken(token);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/api/customers/address\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: \"\" + token\n              },\n              body: JSON.stringify({\n                countryName: data.countryName,\n                provinceName: data.provinceName,\n                cityName: data.cityName,\n                address: data.address,\n                postcode: data.postcode,\n                instructions: data.instructions\n              })\n            }));\n\n          case 11:\n            response = _context.sent;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 14:\n            res = _context.sent;\n\n            if (!(response.status >= 200 && response.status < 300)) {\n              _context.next = 20;\n              break;\n            }\n\n            Alert.alert(\"User delivery Info saved successfully\", \"Thank you\", [{\n              text: \"Ok\"\n            }]);\n            navigation.navigate(\"Footer\");\n            _context.next = 23;\n            break;\n\n          case 20:\n            Alert.alert(\"Invalid Input!\", \"Something went wrong, Try again\", [{\n              text: \"Okay\"\n            }]);\n            error = res;\n            throw error;\n\n          case 23:\n            _context.next = 28;\n            break;\n\n          case 25:\n            _context.prev = 25;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 25]], Promise);\n  };\n\n  if (data.isLoaded) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(ScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, React.createElement(H1, {\n      h1Text: \"Delivery Information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: styles.textChild,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"You say when and where\")), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }, React.createElement(RNPickerSelect, {\n      placeholder: {\n        label: \"Country\"\n      },\n      placeholderTextColor: \"#3E315A\",\n      style: styles.pickerSelect,\n      onValueChange: function onValueChange(value) {\n        return textInputCountryChange(value);\n      },\n      items: countrydata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, React.createElement(RNPickerSelect, {\n      placeholder: {\n        label: \"Province\"\n      },\n      placeholderTextColor: \"#3E315A\",\n      style: styles.pickerSelect,\n      onValueChange: function onValueChange(value) {\n        return textInputProvinceChange(value);\n      },\n      items: provincedata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, React.createElement(RNPickerSelect, {\n      placeholder: {\n        label: \"City\"\n      },\n      placeholderTextColor: \"#3E315A\",\n      style: styles.pickerSelect,\n      onValueChange: function onValueChange(value) {\n        return textInputCityChange(value);\n      },\n      items: citydata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    })), React.createElement(TextInput, {\n      placeholder: \"Address\",\n      textContentType: \"fullStreetAddress\",\n      autoCapitalize: \"none\",\n      onChangeText: function onChangeText(val) {\n        return textInputAddressChange(val);\n      },\n      style: styles.textInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"Postcode\",\n      textContentType: \"postalCode\",\n      autoCapitalize: \"none\",\n      onChangeText: function onChangeText(val) {\n        return textInputPostChange(val);\n      },\n      style: styles.textInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"Delivery Instruction\",\n      textContentType: \"none\",\n      autoCapitalize: \"none\",\n      onChangeText: function onChangeText(val) {\n        return textInputInfoChange(val);\n      },\n      style: styles.textInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: styles.button,\n      type: \"submit\",\n      onPress: function onPress() {\n        return deliveryHandle();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, \"Done\"))));\n  }\n}\nvar styles = StyleSheet.create({\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1\n  },\n  text: {\n    marginBottom: 20\n  },\n  textChild: {\n    color: \"#3E315A\",\n    lineHeight: 20\n  },\n  textInput: {\n    height: 50,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"#D4CDE3\",\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.03,\n    fontSize: 18,\n    borderRadius: 15,\n    paddingLeft: 15,\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  button: {\n    backgroundColor: \"#632DF1\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 15,\n    marginBottom: 30,\n    marginTop: 50\n  },\n  buttonText: {\n    color: \"white\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/screens/onboardingScreens/DeliveryInfo.js"],"names":["React","Component","useEffect","NavigationContainer","H1","AsyncStorage","makeStyles","TextField","MenuItem","RNPickerSelect","getCities","getCountries","getProvinces","useStyles","inputField","borderRadius","width","Dimensions","get","paddingLeft","marginBottom","DeliveryInfo","navigation","classes","useState","citydata","setCitydata","countrydata","setCountrydata","provincedata","setProvincedata","countryName","provinceName","cityName","address","postcode","instructions","isLoaded","data","setData","then","res","needDataCity","i","length","push","label","cityDescription","value","err","console","log","needDataProvince","provinceDescription","needDataCountry","countryDescription","userToken","setUserToken","textInputCountryChange","val","textInputProvinceChange","textInputCityChange","textInputAddressChange","textInputPostChange","textInputInfoChange","deliveryHandle","Alert","alert","text","token","getItem","fetch","method","headers","Accept","Authorization","body","JSON","stringify","response","json","status","navigate","error","flex","justifyContent","alignItems","styles","textChild","pickerSelect","textInput","button","buttonText","StyleSheet","create","marginLeft","marginTop","color","lineHeight","height","backgroundColor","marginRight","fontSize","paddingTop","paddingBottom","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  ScrollView,\n  Dimensions,\n  Button,\n  TextInput,\n  Alert,\n  ActivityIndicator,\n  TouchableOpacity,\n} from \"react-native\";\nimport H1 from \"../../texts/H1\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RNPickerSelect from \"react-native-picker-select\";\nimport { getCities, getCountries, getProvinces } from \"../../../services/api\";\n\nconst useStyles = makeStyles({\n  inputField: {\n    borderRadius: 20,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    paddingLeft: 1,\n    marginBottom: 20,\n  },\n});\n\nexport default function DeliveryInfo({ navigation }) {\n  const classes = useStyles();\n  const [citydata, setCitydata] = React.useState(\"null\");\n  const [countrydata, setCountrydata] = React.useState(\"null\");\n  const [provincedata, setProvincedata] = React.useState(\"null\");\n\n  const [data, setData] = React.useState({\n    countryName: \"\",\n    provinceName: \"\",\n    cityName: \"\",\n    address: \"\",\n    postcode: \"\",\n    instructions: \"\",\n    isLoaded: true,\n  });\n\n  useEffect(() => {\n    getCities().then(\n      (res) => {\n        let needDataCity = [];\n        for (let i = 0; i < res.length; i++) {\n          needDataCity.push({\n            label: res[i].cityDescription,\n            value: res[i].cityDescription,\n          });\n        }\n        setCitydata(needDataCity);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n    getProvinces().then(\n      (res) => {\n        let needDataProvince = [];\n        for (let i = 0; i < res.length; i++) {\n          needDataProvince.push({\n            label: res[i].provinceDescription,\n            value: res[i].provinceDescription,\n          });\n        }\n        setProvincedata(needDataProvince);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n    getCountries().then(\n      (res) => {\n        let needDataCountry = [];\n        for (let i = 0; i < res.length; i++) {\n          needDataCountry.push({\n            label: res[i].countryDescription,\n            value: res[i].countryDescription,\n          });\n        }\n        setCountrydata(needDataCountry);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n    setData({\n      ...data,\n      isLoaded: false,\n    });\n  }, []);\n\n  const [userToken, setUserToken] = React.useState(null);\n  const textInputCountryChange = (val) => {\n    setData({\n      ...data,\n      countryName: val,\n    });\n  };\n  const textInputProvinceChange = (val) => {\n    setData({\n      ...data,\n      provinceName: val,\n    });\n  };\n  const textInputCityChange = (val) => {\n    setData({\n      ...data,\n      cityName: val,\n    });\n  };\n  const textInputAddressChange = (val) => {\n    setData({\n      ...data,\n      address: val,\n    });\n  };\n  const textInputPostChange = (val) => {\n    setData({\n      ...data,\n      postcode: val,\n    });\n  };\n  const textInputInfoChange = (val) => {\n    setData({\n      ...data,\n      instructions: val,\n    });\n  };\n  const deliveryHandle = async () => {\n    if (\n      data.countryName.length == 0 ||\n      data.provinceName.length == 0 ||\n      data.cityName.length == 0 ||\n      data.address.length == 0 ||\n      data.postcode.length == 0 ||\n      data.instructions.length == 0\n    ) {\n      Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [\n        { text: \"Okay\" },\n      ]);\n      return;\n    }\n    let token = null;\n    try {\n      token = await AsyncStorage.getItem(\"userToken\");\n\n      setUserToken(token);\n      let response = await fetch(\n        \"http://localhost:5000/api/customers/address\",\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `${token}`,\n          },\n          body: JSON.stringify({\n            countryName: data.countryName,\n            provinceName: data.provinceName,\n            cityName: data.cityName,\n            address: data.address,\n            postcode: data.postcode,\n\n            instructions: data.instructions,\n          }),\n        }\n      );\n\n      const res = await response.json();\n\n      if (response.status >= 200 && response.status < 300) {\n        Alert.alert(\"User delivery Info saved successfully\", \"Thank you\", [\n          { text: \"Ok\" },\n        ]);\n        navigation.navigate(\"Footer\");\n      } else {\n        Alert.alert(\"Invalid Input!\", \"Something went wrong, Try again\", [\n          { text: \"Okay\" },\n        ]);\n        let error = res;\n        throw error;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (data.isLoaded) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  } else {\n    return (\n      <ScrollView>\n        <View style={styles.body}>\n          <View style={styles.text}>\n            <H1 h1Text=\"Delivery Information\" />\n            <Text style={styles.textChild}>You say when and where</Text>\n          </View>\n          <View>\n            <RNPickerSelect\n              placeholder={{ label: \"Country\" }}\n              placeholderTextColor=\"#3E315A\"\n              style={styles.pickerSelect}\n              onValueChange={(value) => textInputCountryChange(value)}\n              items={countrydata}\n            />\n          </View>\n          <View>\n            <RNPickerSelect\n              placeholder={{ label: \"Province\" }}\n              placeholderTextColor=\"#3E315A\"\n              style={styles.pickerSelect}\n              onValueChange={(value) => textInputProvinceChange(value)}\n              items={provincedata}\n            />\n          </View>\n\n          <View>\n            <RNPickerSelect\n              placeholder={{ label: \"City\" }}\n              placeholderTextColor=\"#3E315A\"\n              style={styles.pickerSelect}\n              onValueChange={(value) => textInputCityChange(value)}\n              items={citydata}\n            />\n          </View>\n\n          <TextInput\n            placeholder={\"Address\"}\n            textContentType={\"fullStreetAddress\"}\n            autoCapitalize=\"none\"\n            onChangeText={(val) => textInputAddressChange(val)}\n            style={styles.textInput}\n          />\n\n          <TextInput\n            placeholder={\"Postcode\"}\n            textContentType={\"postalCode\"}\n            autoCapitalize=\"none\"\n            onChangeText={(val) => textInputPostChange(val)}\n            style={styles.textInput}\n          />\n\n          <TextInput\n            placeholder={\"Delivery Instruction\"}\n            textContentType={\"none\"}\n            autoCapitalize=\"none\"\n            onChangeText={(val) => textInputInfoChange(val)}\n            style={styles.textInput}\n          />\n\n          <TouchableOpacity\n            style={styles.button}\n            type=\"submit\"\n            onPress={() => deliveryHandle()}\n          >\n            <Text style={styles.buttonText}>Done</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    // backgroundColor: \"lightgreen\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1,\n  },\n  text: {\n    marginBottom: 20,\n  },\n  textChild: {\n    color: \"#3E315A\",\n    lineHeight: 20,\n  },\n  textInput: {\n    height: 50,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"#D4CDE3\",\n    // marginLeft: Dimensions.get(\"screen\").width * 0.01,\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.03,\n    fontSize: 18,\n    borderRadius: 15,\n    paddingLeft: 15,\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  button: {\n    backgroundColor: \"#632DF1\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 15,\n    marginBottom: 30,\n    marginTop: 50,\n  },\n  buttonText: {\n    color: \"white\",\n    textAlign: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}