{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { BASE_URL } from \"../config/api-config\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nexport var getAllergy = function getAllergy() {\n  var url, res, allergies;\n  return _regeneratorRuntime.async(function getAllergy$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/allergens\";\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context.sent;\n          allergies = res.data;\n          return _context.abrupt(\"return\", allergies);\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          throw _context.t0;\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getCuisine = function getCuisine() {\n  var url, res, cuisines;\n  return _regeneratorRuntime.async(function getCuisine$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/cuisines\";\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context2.sent;\n          cuisines = res.data;\n          return _context2.abrupt(\"return\", cuisines);\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          throw _context2.t0;\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getDietType = function getDietType() {\n  var url, res, dietTypes;\n  return _regeneratorRuntime.async(function getDietType$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/dietTypes\";\n          _context3.prev = 1;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context3.sent;\n          dietTypes = res.data;\n          return _context3.abrupt(\"return\", dietTypes);\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](1);\n          throw _context3.t0;\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getSpiciness = function getSpiciness() {\n  var url, res, spiciness;\n  return _regeneratorRuntime.async(function getSpiciness$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/spiciness\";\n          _context4.prev = 1;\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context4.sent;\n          spiciness = res.data;\n          return _context4.abrupt(\"return\", spiciness);\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](1);\n          throw _context4.t0;\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getCountries = function getCountries() {\n  var url, res, response;\n  return _regeneratorRuntime.async(function getCountries$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/countries\";\n          _context5.prev = 1;\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context5.sent;\n          response = res.data;\n          return _context5.abrupt(\"return\", response);\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](1);\n          throw _context5.t0;\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getProvinces = function getProvinces() {\n  var url, res, response;\n  return _regeneratorRuntime.async(function getProvinces$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/provinces\";\n          _context6.prev = 1;\n          _context6.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context6.sent;\n          response = res.data;\n          return _context6.abrupt(\"return\", response);\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](1);\n          throw _context6.t0;\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getCities = function getCities() {\n  var url, res, response;\n  return _regeneratorRuntime.async(function getCities$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          url = BASE_URL + \"/helpers/cities\";\n          _context7.prev = 1;\n          _context7.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(url));\n\n        case 4:\n          res = _context7.sent;\n          response = res.data;\n          return _context7.abrupt(\"return\", response);\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](1);\n          throw _context7.t0;\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getCustomerInfo = function getCustomerInfo() {\n  var url, token, res, customer;\n  return _regeneratorRuntime.async(function getCustomerInfo$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          url = BASE_URL + \"/customers/\";\n          token = null;\n          _context8.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 4:\n          token = _context8.sent;\n          _context8.prev = 5;\n          _context8.next = 8;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: {\n              Authorization: \"\" + token\n            }\n          }));\n\n        case 8:\n          res = _context8.sent;\n          customer = res.data;\n          return _context8.abrupt(\"return\", customer);\n\n        case 13:\n          _context8.prev = 13;\n          _context8.t0 = _context8[\"catch\"](5);\n          throw _context8.t0;\n\n        case 16:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, [[5, 13]], Promise);\n};\nexport var getCustomerAddress = function getCustomerAddress() {\n  var url, token, res, customer;\n  return _regeneratorRuntime.async(function getCustomerAddress$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          url = BASE_URL + \"/customers/address\";\n          token = null;\n          _context9.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 4:\n          token = _context9.sent;\n          _context9.prev = 5;\n          _context9.next = 8;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: {\n              Authorization: \"\" + token\n            }\n          }));\n\n        case 8:\n          res = _context9.sent;\n          customer = res.data[0];\n          return _context9.abrupt(\"return\", customer);\n\n        case 13:\n          _context9.prev = 13;\n          _context9.t0 = _context9[\"catch\"](5);\n          throw _context9.t0;\n\n        case 16:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, [[5, 13]], Promise);\n};\nexport var getCustomerChoices = function getCustomerChoices() {\n  var url, token, res, choices;\n  return _regeneratorRuntime.async(function getCustomerChoices$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          url = BASE_URL + \"/customers/choices\";\n          token = null;\n          _context10.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 4:\n          token = _context10.sent;\n          _context10.prev = 5;\n          _context10.next = 8;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: {\n              Authorization: \"\" + token\n            }\n          }));\n\n        case 8:\n          res = _context10.sent;\n          choices = res.data;\n          return _context10.abrupt(\"return\", choices);\n\n        case 13:\n          _context10.prev = 13;\n          _context10.t0 = _context10[\"catch\"](5);\n          throw _context10.t0;\n\n        case 16:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, [[5, 13]], Promise);\n};\nexport var getDeliveryTime = function getDeliveryTime(restaurantID) {\n  var url, token, res, time;\n  return _regeneratorRuntime.async(function getDeliveryTime$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          url = BASE_URL + \"/orders/deliveryTime\";\n          token = null;\n          _context11.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 4:\n          token = _context11.sent;\n          _context11.prev = 5;\n          _context11.next = 8;\n          return _regeneratorRuntime.awrap(axios.post(url, {\n            restaurantID: \"\" + restaurantID\n          }, {\n            headers: {\n              Authorization: \"\" + token\n            }\n          }));\n\n        case 8:\n          res = _context11.sent;\n          time = res.data;\n          return _context11.abrupt(\"return\", time);\n\n        case 13:\n          _context11.prev = 13;\n          _context11.t0 = _context11[\"catch\"](5);\n          throw _context11.t0;\n\n        case 16:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[5, 13]], Promise);\n};\nexport var getSuitableMenu = function getSuitableMenu(noOfPeople, budget) {\n  var token, body, url, response, res;\n  return _regeneratorRuntime.async(function getSuitableMenu$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          token = null;\n          _context12.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 3:\n          token = _context12.sent;\n          body = {\n            budget: \"\" + budget,\n            noOfPeople: \"\" + noOfPeople\n          };\n          url = BASE_URL + \"/orders/pickMenu\";\n          _context12.prev = 6;\n          _context12.next = 9;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: \"\" + token\n            },\n            body: JSON.stringify(body)\n          }));\n\n        case 9:\n          response = _context12.sent;\n          _context12.next = 12;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 12:\n          res = _context12.sent;\n          return _context12.abrupt(\"return\", res);\n\n        case 16:\n          _context12.prev = 16;\n          _context12.t0 = _context12[\"catch\"](6);\n          throw _context12.t0;\n\n        case 19:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, [[6, 16]], Promise);\n};\nexport var getSubmitOrder = function getSubmitOrder(menuID) {\n  var token, body, url, response, res;\n  return _regeneratorRuntime.async(function getSubmitOrder$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          token = null;\n          _context13.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 3:\n          token = _context13.sent;\n          body = {\n            menuID: \"\" + menuID\n          };\n          url = BASE_URL + \"/orders\";\n          _context13.prev = 6;\n          _context13.next = 9;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: \"\" + token\n            },\n            body: JSON.stringify(body)\n          }));\n\n        case 9:\n          response = _context13.sent;\n          _context13.next = 12;\n          return _regeneratorRuntime.awrap(response);\n\n        case 12:\n          res = _context13.sent;\n          return _context13.abrupt(\"return\", res);\n\n        case 16:\n          _context13.prev = 16;\n          _context13.t0 = _context13[\"catch\"](6);\n          throw _context13.t0;\n\n        case 19:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, [[6, 16]], Promise);\n};\nexport var postChoice = function postChoice(choice) {\n  var token, body, headers, url, res, choiceData;\n  return _regeneratorRuntime.async(function postChoice$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          token = null;\n          _context14.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 3:\n          token = _context14.sent;\n          body = {\n            choiceName: \"\" + choice\n          };\n          headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"\" + token\n          };\n          url = BASE_URL + \"/customers/choice\";\n          _context14.prev = 7;\n          _context14.next = 10;\n          return _regeneratorRuntime.awrap(axios.post(url, body, {\n            headers: headers\n          }));\n\n        case 10:\n          res = _context14.sent;\n          choiceData = res.data;\n          return _context14.abrupt(\"return\", choiceData);\n\n        case 15:\n          _context14.prev = 15;\n          _context14.t0 = _context14[\"catch\"](7);\n          throw _context14.t0;\n\n        case 18:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, [[7, 15]], Promise);\n};\nexport var putDeliveryInfo = function putDeliveryInfo(countryName, provinceName, cityName, address, postcode, instructions) {\n  var token, body, headers, url, res, response;\n  return _regeneratorRuntime.async(function putDeliveryInfo$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          token = null;\n          _context15.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 3:\n          token = _context15.sent;\n          body = {\n            countryName: \"\" + countryName,\n            provinceName: \"\" + provinceName,\n            cityName: \"\" + cityName,\n            address: \"\" + address,\n            postcode: \"\" + postcode,\n            instructions: \"\" + instructions\n          };\n          headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"\" + token\n          };\n          url = BASE_URL + \"/customers/address\";\n          _context15.prev = 7;\n          _context15.next = 10;\n          return _regeneratorRuntime.awrap(axios.put(url, body, {\n            headers: headers\n          }));\n\n        case 10:\n          res = _context15.sent;\n          response = res.data;\n          return _context15.abrupt(\"return\", response);\n\n        case 15:\n          _context15.prev = 15;\n          _context15.t0 = _context15[\"catch\"](7);\n          throw _context15.t0;\n\n        case 18:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, [[7, 15]], Promise);\n};\nexport var putCustomerInfo = function putCustomerInfo(email, password, firstName, lastName, phoneNumber, instructions) {\n  var token, body, headers, url, res, response;\n  return _regeneratorRuntime.async(function putCustomerInfo$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          token = null;\n          _context16.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 3:\n          token = _context16.sent;\n          body = {\n            email: \"\" + email,\n            password: \"\" + password,\n            firstName: \"\" + firstName,\n            lastName: \"\" + lastName,\n            phoneNumber: \"\" + phoneNumber,\n            instructions: \"\" + instructions\n          };\n          headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"\" + token\n          };\n          url = BASE_URL + \"/customers\";\n          _context16.prev = 7;\n          _context16.next = 10;\n          return _regeneratorRuntime.awrap(axios.put(url, body, {\n            headers: headers\n          }));\n\n        case 10:\n          res = _context16.sent;\n          response = res.data;\n          return _context16.abrupt(\"return\", response);\n\n        case 15:\n          _context16.prev = 15;\n          _context16.t0 = _context16[\"catch\"](7);\n          throw _context16.t0;\n\n        case 18:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, [[7, 15]], Promise);\n};\nexport var getDeactivateChoices = function getDeactivateChoices() {\n  var url, token, res, response;\n  return _regeneratorRuntime.async(function getDeactivateChoices$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          url = BASE_URL + \"/customers/deactivechoices\";\n          token = null;\n          _context17.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 4:\n          token = _context17.sent;\n          _context17.prev = 5;\n          _context17.next = 8;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: {\n              Authorization: \"\" + token\n            }\n          }));\n\n        case 8:\n          res = _context17.sent;\n          response = res.data;\n          return _context17.abrupt(\"return\", response);\n\n        case 13:\n          _context17.prev = 13;\n          _context17.t0 = _context17[\"catch\"](5);\n          throw _context17.t0;\n\n        case 16:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, null, null, [[5, 13]], Promise);\n};\nexport var postCustomerInquiry = function postCustomerInquiry(email, name, subject, message, phoneNumber) {\n  var token, body, headers, url, response, res;\n  return _regeneratorRuntime.async(function postCustomerInquiry$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          token = null;\n          _context18.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 3:\n          token = _context18.sent;\n          body = {\n            email: \"\" + email,\n            name: \"\" + name,\n            subject: \"\" + subject,\n            body: \"\" + message,\n            phoneNumber: \"\" + phoneNumber\n          };\n          headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"\" + token\n          };\n          url = BASE_URL + \"/inquiries\";\n          _context18.prev = 7;\n          _context18.next = 10;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              Authorization: \"\" + token\n            },\n            body: JSON.stringify(body)\n          }));\n\n        case 10:\n          response = _context18.sent;\n          _context18.next = 13;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 13:\n          res = _context18.sent;\n          return _context18.abrupt(\"return\", res);\n\n        case 17:\n          _context18.prev = 17;\n          _context18.t0 = _context18[\"catch\"](7);\n          throw _context18.t0;\n\n        case 20:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, null, null, [[7, 17]], Promise);\n};\nexport var getCustomerActiveOrders = function getCustomerActiveOrders() {\n  var url, token, res, response;\n  return _regeneratorRuntime.async(function getCustomerActiveOrders$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          url = BASE_URL + \"/orders/customer\";\n          token = null;\n          _context19.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userToken\"));\n\n        case 4:\n          token = _context19.sent;\n          _context19.prev = 5;\n          _context19.next = 8;\n          return _regeneratorRuntime.awrap(axios.get(url, {\n            headers: {\n              Authorization: \"\" + token\n            }\n          }));\n\n        case 8:\n          res = _context19.sent;\n          response = res.data;\n          return _context19.abrupt(\"return\", response);\n\n        case 13:\n          _context19.prev = 13;\n          _context19.t0 = _context19[\"catch\"](5);\n          throw _context19.t0;\n\n        case 16:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, null, null, [[5, 13]], Promise);\n};","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/services/api.js"],"names":["BASE_URL","axios","AsyncStorage","getAllergy","url","get","res","allergies","data","getCuisine","cuisines","getDietType","dietTypes","getSpiciness","spiciness","getCountries","response","getProvinces","getCities","getCustomerInfo","token","getItem","headers","Authorization","customer","getCustomerAddress","getCustomerChoices","choices","getDeliveryTime","restaurantID","post","time","getSuitableMenu","noOfPeople","budget","body","fetch","method","Accept","JSON","stringify","json","getSubmitOrder","menuID","postChoice","choice","choiceName","choiceData","putDeliveryInfo","countryName","provinceName","cityName","address","postcode","instructions","put","putCustomerInfo","email","password","firstName","lastName","phoneNumber","getDeactivateChoices","postCustomerInquiry","name","subject","message","getCustomerActiveOrders"],"mappings":";AAAA,SAASA,QAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,GADkB,GACTJ,QADS;AAAA;AAAA;AAAA,2CAGJC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAHI;;AAAA;AAGhBE,UAAAA,GAHgB;AAIhBC,UAAAA,SAJgB,GAIJD,GAAG,CAACE,IAJA;AAAA,2CAMfD,SANe;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAWP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBL,UAAAA,GADkB,GACTJ,QADS;AAAA;AAAA;AAAA,2CAGJC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAHI;;AAAA;AAGhBE,UAAAA,GAHgB;AAIhBI,UAAAA,QAJgB,GAILJ,GAAG,CAACE,IAJC;AAAA,4CAMfE,QANe;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAWP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBP,UAAAA,GADmB,GACVJ,QADU;AAAA;AAAA;AAAA,2CAGLC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAHK;;AAAA;AAGjBE,UAAAA,GAHiB;AAIjBM,UAAAA,SAJiB,GAILN,GAAG,CAACE,IAJC;AAAA,4CAMhBI,SANgB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAWP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBT,UAAAA,GADoB,GACXJ,QADW;AAAA;AAAA;AAAA,2CAGNC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAHM;;AAAA;AAGlBE,UAAAA,GAHkB;AAIlBQ,UAAAA,SAJkB,GAINR,GAAG,CAACE,IAJE;AAAA,4CAMjBM,SANiB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAWP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBX,UAAAA,GADoB,GACXJ,QADW;AAAA;AAAA;AAAA,2CAGNC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAHM;;AAAA;AAGlBE,UAAAA,GAHkB;AAIlBU,UAAAA,QAJkB,GAIPV,GAAG,CAACE,IAJG;AAAA,4CAMjBQ,QANiB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAWP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBb,UAAAA,GADoB,GACXJ,QADW;AAAA;AAAA;AAAA,2CAGNC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAHM;;AAAA;AAGlBE,UAAAA,GAHkB;AAIlBU,UAAAA,QAJkB,GAIPV,GAAG,CAACE,IAJG;AAAA,4CAMjBQ,QANiB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAYP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBd,UAAAA,GADiB,GACRJ,QADQ;AAAA;AAAA;AAAA,2CAGHC,KAAK,CAACI,GAAN,CAAUD,GAAV,CAHG;;AAAA;AAGfE,UAAAA,GAHe;AAIfU,UAAAA,QAJe,GAIJV,GAAG,CAACE,IAJA;AAAA,4CAMdQ,QANc;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAYP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBf,UAAAA,GADuB,GACdJ,QADc;AAEzBoB,UAAAA,KAFyB,GAEjB,IAFiB;AAAA;AAAA,2CAGflB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAHe;;AAAA;AAG7BD,UAAAA,KAH6B;AAAA;AAAA;AAAA,2CAKTnB,KAAK,CAACI,GAAN,CAAUD,GAAV,EAAe;AAC/BkB,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,OAAKH;AADX;AADsB,WAAf,CALS;;AAAA;AAKrBd,UAAAA,GALqB;AAUrBkB,UAAAA,QAVqB,GAUVlB,GAAG,CAACE,IAVM;AAAA,4CAWpBgB,QAXoB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAgBP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BrB,UAAAA,GAD0B,GACjBJ,QADiB;AAE5BoB,UAAAA,KAF4B,GAEpB,IAFoB;AAAA;AAAA,2CAGlBlB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAHkB;;AAAA;AAGhCD,UAAAA,KAHgC;AAAA;AAAA;AAAA,2CAKZnB,KAAK,CAACI,GAAN,CAAUD,GAAV,EAAe;AAC/BkB,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,OAAKH;AADX;AADsB,WAAf,CALY;;AAAA;AAKxBd,UAAAA,GALwB;AAUxBkB,UAAAA,QAVwB,GAUblB,GAAG,CAACE,IAAJ,CAAS,CAAT,CAVa;AAAA,4CAWvBgB,QAXuB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAgBP,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BtB,UAAAA,GAD0B,GACjBJ,QADiB;AAE5BoB,UAAAA,KAF4B,GAEpB,IAFoB;AAAA;AAAA,2CAGlBlB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAHkB;;AAAA;AAGhCD,UAAAA,KAHgC;AAAA;AAAA;AAAA,2CAKZnB,KAAK,CAACI,GAAN,CAAUD,GAAV,EAAe;AAC/BkB,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,OAAKH;AADX;AADsB,WAAf,CALY;;AAAA;AAKxBd,UAAAA,GALwB;AAUxBqB,UAAAA,OAVwB,GAUdrB,GAAG,CAACE,IAVU;AAAA,6CAWvBmB,OAXuB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAgBP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAOC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBzB,UAAAA,GADuB,GACdJ,QADc;AAEzBoB,UAAAA,KAFyB,GAEjB,IAFiB;AAAA;AAAA,2CAGflB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAHe;;AAAA;AAG7BD,UAAAA,KAH6B;AAAA;AAAA;AAAA,2CAKTnB,KAAK,CAAC6B,IAAN,CAChB1B,GADgB,EAEhB;AAAEyB,YAAAA,YAAY,OAAKA;AAAnB,WAFgB,EAGhB;AACEP,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,OAAKH;AADX;AADX,WAHgB,CALS;;AAAA;AAKrBd,UAAAA,GALqB;AAcrByB,UAAAA,IAdqB,GAcdzB,GAAG,CAACE,IAdU;AAAA,6CAepBuB,IAfoB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAqBP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAOC,UAAP,EAAmBC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBd,UAAAA,KADyB,GACjB,IADiB;AAAA;AAAA,2CAEflB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAFe;;AAAA;AAE7BD,UAAAA,KAF6B;AAGvBe,UAAAA,IAHuB,GAGhB;AAAED,YAAAA,MAAM,OAAKA,MAAb;AAAuBD,YAAAA,UAAU,OAAKA;AAAtC,WAHgB;AAIvB7B,UAAAA,GAJuB,GAIdJ,QAJc;AAAA;AAAA;AAAA,2CAMNoC,KAAK,CAAChC,GAAD,EAAM;AAC9BiC,YAAAA,MAAM,EAAE,MADsB;AAE9Bf,YAAAA,OAAO,EAAE;AACPgB,cAAAA,MAAM,EAAE,kBADD;AAEP,8BAAgB,kBAFT;AAGPf,cAAAA,aAAa,OAAKH;AAHX,aAFqB;AAO9Be,YAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAPwB,WAAN,CANC;;AAAA;AAMvBnB,UAAAA,QANuB;AAAA;AAAA,2CAgBTA,QAAQ,CAACyB,IAAT,EAhBS;;AAAA;AAgBrBnC,UAAAA,GAhBqB;AAAA,6CAiBpBA,GAjBoB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAsBP,OAAO,IAAMoC,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBvB,UAAAA,KADwB,GAChB,IADgB;AAAA;AAAA,2CAEdlB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAFc;;AAAA;AAE5BD,UAAAA,KAF4B;AAKtBe,UAAAA,IALsB,GAKf;AAAEQ,YAAAA,MAAM,OAAKA;AAAb,WALe;AAMtBvC,UAAAA,GANsB,GAMbJ,QANa;AAAA;AAAA;AAAA,2CAQLoC,KAAK,CAAChC,GAAD,EAAM;AAC9BiC,YAAAA,MAAM,EAAE,MADsB;AAE9Bf,YAAAA,OAAO,EAAE;AACPgB,cAAAA,MAAM,EAAE,kBADD;AAEP,8BAAgB,kBAFT;AAGPf,cAAAA,aAAa,OAAKH;AAHX,aAFqB;AAO9Be,YAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAPwB,WAAN,CARA;;AAAA;AAQtBnB,UAAAA,QARsB;AAAA;AAAA,2CAkBRA,QAlBQ;;AAAA;AAkBpBV,UAAAA,GAlBoB;AAAA,6CAmBnBA,GAnBmB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAyBP,OAAO,IAAMsC,UAAU,GAAG,SAAbA,UAAa,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBzB,UAAAA,KADoB,GACZ,IADY;AAAA;AAAA,2CAEVlB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAFU;;AAAA;AAExBD,UAAAA,KAFwB;AAGlBe,UAAAA,IAHkB,GAGX;AAAEW,YAAAA,UAAU,OAAKD;AAAjB,WAHW;AAIlBvB,UAAAA,OAJkB,GAIR;AACd,4BAAgB,kBADF;AAEdC,YAAAA,aAAa,OAAKH;AAFJ,WAJQ;AAQlBhB,UAAAA,GARkB,GAQTJ,QARS;AAAA;AAAA;AAAA,2CAUJC,KAAK,CAAC6B,IAAN,CAAW1B,GAAX,EAAgB+B,IAAhB,EAAsB;AACtCb,YAAAA,OAAO,EAAEA;AAD6B,WAAtB,CAVI;;AAAA;AAUhBhB,UAAAA,GAVgB;AAahByC,UAAAA,UAbgB,GAaHzC,GAAG,CAACE,IAbD;AAAA,6CAcfuC,UAde;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAoBP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAC7BC,WAD6B,EAE7BC,YAF6B,EAG7BC,QAH6B,EAI7BC,OAJ6B,EAK7BC,QAL6B,EAM7BC,YAN6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAQzBlC,UAAAA,KARyB,GAQjB,IARiB;AAAA;AAAA,2CASflB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CATe;;AAAA;AAS7BD,UAAAA,KAT6B;AAUvBe,UAAAA,IAVuB,GAUhB;AACXc,YAAAA,WAAW,OAAKA,WADL;AAEXC,YAAAA,YAAY,OAAMA,YAFP;AAGXC,YAAAA,QAAQ,OAAKA,QAHF;AAIXC,YAAAA,OAAO,OAAKA,OAJD;AAKXC,YAAAA,QAAQ,OAAKA,QALF;AAMXC,YAAAA,YAAY,OAAKA;AANN,WAVgB;AAmBvBhC,UAAAA,OAnBuB,GAmBb;AACd,4BAAgB,kBADF;AAEdC,YAAAA,aAAa,OAAKH;AAFJ,WAnBa;AAuBvBhB,UAAAA,GAvBuB,GAuBdJ,QAvBc;AAAA;AAAA;AAAA,2CAyBTC,KAAK,CAACsD,GAAN,CAAUnD,GAAV,EAAe+B,IAAf,EAAqB;AACrCb,YAAAA,OAAO,EAAEA;AAD4B,WAArB,CAzBS;;AAAA;AAyBrBhB,UAAAA,GAzBqB;AA4BrBU,UAAAA,QA5BqB,GA4BVV,GAAG,CAACE,IA5BM;AAAA,6CA6BpBQ,QA7BoB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAmCP,OAAO,IAAMwC,eAAe,GAAG,SAAlBA,eAAkB,CAC7BC,KAD6B,EAE7BC,QAF6B,EAG7BC,SAH6B,EAI7BC,QAJ6B,EAK7BC,WAL6B,EAM7BP,YAN6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAQzBlC,UAAAA,KARyB,GAQjB,IARiB;AAAA;AAAA,2CASflB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CATe;;AAAA;AAS7BD,UAAAA,KAT6B;AAUvBe,UAAAA,IAVuB,GAUhB;AACXsB,YAAAA,KAAK,OAAKA,KADC;AAEXC,YAAAA,QAAQ,OAAMA,QAFH;AAGXC,YAAAA,SAAS,OAAKA,SAHH;AAIXC,YAAAA,QAAQ,OAAKA,QAJF;AAKXC,YAAAA,WAAW,OAAKA,WALL;AAMXP,YAAAA,YAAY,OAAKA;AANN,WAVgB;AAmBvBhC,UAAAA,OAnBuB,GAmBb;AACd,4BAAgB,kBADF;AAEdC,YAAAA,aAAa,OAAKH;AAFJ,WAnBa;AAuBvBhB,UAAAA,GAvBuB,GAuBdJ,QAvBc;AAAA;AAAA;AAAA,2CAyBTC,KAAK,CAACsD,GAAN,CAAUnD,GAAV,EAAe+B,IAAf,EAAqB;AACrCb,YAAAA,OAAO,EAAEA;AAD4B,WAArB,CAzBS;;AAAA;AAyBrBhB,UAAAA,GAzBqB;AA4BrBU,UAAAA,QA5BqB,GA4BVV,GAAG,CAACE,IA5BM;AAAA,6CA6BpBQ,QA7BoB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAkCP,OAAO,IAAM8C,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5B1D,UAAAA,GAD4B,GACnBJ,QADmB;AAE9BoB,UAAAA,KAF8B,GAEtB,IAFsB;AAAA;AAAA,2CAGpBlB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAHoB;;AAAA;AAGlCD,UAAAA,KAHkC;AAAA;AAAA;AAAA,2CAKdnB,KAAK,CAACI,GAAN,CAAUD,GAAV,EAAe;AAC/BkB,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,OAAKH;AADX;AADsB,WAAf,CALc;;AAAA;AAK1Bd,UAAAA,GAL0B;AAU1BU,UAAAA,QAV0B,GAUfV,GAAG,CAACE,IAVW;AAAA,6CAWzBQ,QAXyB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAgBP,OAAO,IAAM+C,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCN,KADiC,EAEjCO,IAFiC,EAGjCC,OAHiC,EAIjCC,OAJiC,EAKjCL,WALiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ7BzC,UAAAA,KAR6B,GAQrB,IARqB;AAAA;AAAA,2CASnBlB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CATmB;;AAAA;AASjCD,UAAAA,KATiC;AAU3Be,UAAAA,IAV2B,GAUpB;AACXsB,YAAAA,KAAK,OAAKA,KADC;AAEXO,YAAAA,IAAI,OAAMA,IAFC;AAGXC,YAAAA,OAAO,OAAKA,OAHD;AAIX9B,YAAAA,IAAI,OAAK+B,OAJE;AAKXL,YAAAA,WAAW,OAAKA;AALL,WAVoB;AAkB3BvC,UAAAA,OAlB2B,GAkBjB;AACd,4BAAgB,kBADF;AAEdC,YAAAA,aAAa,OAAKH;AAFJ,WAlBiB;AAuB3BhB,UAAAA,GAvB2B,GAuBlBJ,QAvBkB;AAAA;AAAA;AAAA,2CAyBVoC,KAAK,CAAChC,GAAD,EAAM;AAC9BiC,YAAAA,MAAM,EAAE,MADsB;AAE9Bf,YAAAA,OAAO,EAAE;AACPgB,cAAAA,MAAM,EAAE,kBADD;AAEP,8BAAgB,kBAFT;AAGPf,cAAAA,aAAa,OAAKH;AAHX,aAFqB;AAO9Be,YAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAPwB,WAAN,CAzBK;;AAAA;AAyB3BnB,UAAAA,QAzB2B;AAAA;AAAA,2CAkCbA,QAAQ,CAACyB,IAAT,EAlCa;;AAAA;AAkCzBnC,UAAAA,GAlCyB;AAAA,6CAmCxBA,GAnCwB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AA0CP,OAAO,IAAM6D,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/B/D,UAAAA,GAD+B,GACtBJ,QADsB;AAEjCoB,UAAAA,KAFiC,GAEzB,IAFyB;AAAA;AAAA,2CAGvBlB,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAHuB;;AAAA;AAGrCD,UAAAA,KAHqC;AAAA;AAAA;AAAA,2CAKjBnB,KAAK,CAACI,GAAN,CAAUD,GAAV,EAAe;AAC/BkB,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,OAAKH;AADX;AADsB,WAAf,CALiB;;AAAA;AAK7Bd,UAAAA,GAL6B;AAU7BU,UAAAA,QAV6B,GAUlBV,GAAG,CAACE,IAVc;AAAA,6CAW5BQ,QAX4B;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC","sourcesContent":["import { BASE_URL } from \"../config/api-config\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const getAllergy = async () => {\n  const url = `${BASE_URL}/helpers/allergens`;\n  try {\n    const res = await axios.get(url);\n    const allergies = res.data;\n\n    return allergies;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getCuisine = async () => {\n  const url = `${BASE_URL}/helpers/cuisines`;\n  try {\n    const res = await axios.get(url);\n    const cuisines = res.data;\n\n    return cuisines;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getDietType = async () => {\n  const url = `${BASE_URL}/helpers/dietTypes`;\n  try {\n    const res = await axios.get(url);\n    const dietTypes = res.data;\n\n    return dietTypes;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getSpiciness = async () => {\n  const url = `${BASE_URL}/helpers/spiciness`;\n  try {\n    const res = await axios.get(url);\n    const spiciness = res.data;\n\n    return spiciness;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getCountries = async () => {\n  const url = `${BASE_URL}/helpers/countries`;\n  try {\n    const res = await axios.get(url);\n    const response = res.data;\n\n    return response;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getProvinces = async () => {\n  const url = `${BASE_URL}/helpers/provinces`;\n  try {\n    const res = await axios.get(url);\n    const response = res.data;\n\n    return response;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const getCities = async () => {\n  const url = `${BASE_URL}/helpers/cities`;\n  try {\n    const res = await axios.get(url);\n    const response = res.data;\n\n    return response;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const getCustomerInfo = async () => {\n  const url = `${BASE_URL}/customers/`;\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  try {\n    const res = await axios.get(url, {\n      headers: {\n        Authorization: `${token}`,\n      },\n    });\n    const customer = res.data;\n    return customer;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getCustomerAddress = async () => {\n  const url = `${BASE_URL}/customers/address`;\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  try {\n    const res = await axios.get(url, {\n      headers: {\n        Authorization: `${token}`,\n      },\n    });\n    const customer = res.data[0];\n    return customer;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getCustomerChoices = async () => {\n  const url = `${BASE_URL}/customers/choices`;\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  try {\n    const res = await axios.get(url, {\n      headers: {\n        Authorization: `${token}`,\n      },\n    });\n    const choices = res.data;\n    return choices;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getDeliveryTime = async (restaurantID) => {\n  const url = `${BASE_URL}/orders/deliveryTime`;\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  try {\n    const res = await axios.post(\n      url,\n      { restaurantID: `${restaurantID}` },\n      {\n        headers: {\n          Authorization: `${token}`,\n        },\n      }\n    );\n    const time = res.data;\n    return time;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const getSuitableMenu = async (noOfPeople, budget) => {\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  const body = { budget: `${budget}`, noOfPeople: `${noOfPeople}` };\n  const url = `${BASE_URL}/orders/pickMenu`;\n  try {\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `${token}`,\n      },\n      body: JSON.stringify(body),\n    });\n\n    const res = await response.json();\n    return res;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getSubmitOrder = async (menuID) => {\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  // console.log(token)\n  // console.log(menuID)\n  const body = { menuID: `${menuID}` };\n  const url = `${BASE_URL}/orders`;\n  try {\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `${token}`,\n      },\n      body: JSON.stringify(body),\n    });\n\n    const res = await response;\n    return res;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const postChoice = async (choice) => {\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  const body = { choiceName: `${choice}` };\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: `${token}`,\n  };\n  const url = `${BASE_URL}/customers/choice`;\n  try {\n    const res = await axios.post(url, body, {\n      headers: headers,\n    });\n    const choiceData = res.data;\n    return choiceData;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const putDeliveryInfo = async (\n  countryName,\n  provinceName,\n  cityName,\n  address,\n  postcode,\n  instructions\n) => {\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  const body = {\n    countryName: `${countryName}`,\n    provinceName : `${provinceName}`,\n    cityName: `${cityName}`,\n    address: `${address}`,\n    postcode: `${postcode}`,\n    instructions: `${instructions}`,\n\n  };\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: `${token}`,\n  };\n  const url = `${BASE_URL}/customers/address`;\n  try {\n    const res = await axios.put(url, body, {\n      headers: headers,\n    });\n    const response = res.data;\n    return response;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const putCustomerInfo = async (\n  email,\n  password,\n  firstName,\n  lastName,\n  phoneNumber,\n  instructions\n) => {\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  const body = {\n    email: `${email}`,\n    password : `${password}`,\n    firstName: `${firstName}`,\n    lastName: `${lastName}`,\n    phoneNumber: `${phoneNumber}`,\n    instructions: `${instructions}`,\n\n  };\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: `${token}`,\n  };\n  const url = `${BASE_URL}/customers`;\n  try {\n    const res = await axios.put(url, body, {\n      headers: headers,\n    });\n    const response = res.data;\n    return response;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const getDeactivateChoices = async () => {\n  const url = `${BASE_URL}/customers/deactivechoices`;\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  try {\n    const res = await axios.get(url, {\n      headers: {\n        Authorization: `${token}`,\n      },\n    });\n    const response = res.data;\n    return response;\n  } catch (err) {\n    throw err;\n  }\n};\nexport const postCustomerInquiry = async (\n  email,\n  name,\n  subject,\n  message,\n  phoneNumber\n) => {\n  \n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  const body = {\n    email: `${email}`,\n    name : `${name}`,\n    subject: `${subject}`,\n    body: `${message}`,\n    phoneNumber: `${phoneNumber}`,\n\n  };\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: `${token}`,\n  };\n\n  const url = `${BASE_URL}/inquiries`;\n  try {\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `${token}`,\n      },\n      body: JSON.stringify(body),\n    });\n    const res = await response.json();\n    return res;\n    \n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const getCustomerActiveOrders = async () => {\n  const url = `${BASE_URL}/orders/customer`;\n  let token = null;\n  token = await AsyncStorage.getItem(\"userToken\");\n  try {\n    const res = await axios.get(url, {\n      headers: {\n        Authorization: `${token}`,\n      },\n    });\n    const response = res.data;\n    return response;\n  } catch (err) {\n    throw err;\n  }\n}"]},"metadata":{},"sourceType":"module"}