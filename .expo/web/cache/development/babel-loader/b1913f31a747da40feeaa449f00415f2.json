{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/screens/signIn/SignIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { AuthContext } from \"../../Context\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Users from \"../../Users\";\nimport H1 from \"../../texts/H1\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { TextInput } from \"react-native-paper\";\nexport default function SignIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var _React$useState = React.useState({\n    email: \"\",\n    password: \"\",\n    isValidUser: true,\n    isValidPassword: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var textInputChange = function textInputChange(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        email: val,\n        isValidUser: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        email: val,\n        isValidUser: false\n      }));\n    }\n  };\n\n  var handlePasswordChange = function handlePasswordChange(val) {\n    if (val.trim().length >= 8) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        password: val,\n        isValidPassword: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        password: val,\n        isValidPassword: false\n      }));\n    }\n  };\n\n  var handleValidUser = function handleValidUser(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidUser: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidUser: false\n      }));\n    }\n  };\n\n  var loginHandle = function loginHandle() {\n    var response, res, accessToken, error;\n    return _regeneratorRuntime.async(function loginHandle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.email.length == 0 || data.password.length == 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert(\"Wrong Input!\", \"email or password field cannot be empty.\", [{\n              text: \"Okay\"\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/api/customers/login\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: data.email,\n                password: data.password\n              })\n            }));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 9:\n            res = _context.sent;\n\n            if (!(response.status >= 200 && response.status < 300)) {\n              _context.next = 17;\n              break;\n            }\n\n            accessToken = res.token;\n            signIn(accessToken);\n            Alert.alert(\"Done\", \"user logged In\", [{\n              text: \"Okay\"\n            }]);\n            navigation.navigate(\"Root\", {\n              screen: \"Footer\"\n            });\n            _context.next = 20;\n            break;\n\n          case 17:\n            Alert.alert(\"Invalid User!\", \"email or password is incorrect.\", [{\n              text: \"Okay\"\n            }]);\n            error = res;\n            throw error;\n\n          case 20:\n            _context.next = 25;\n            break;\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 22]], Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(H1, {\n    h1Text: \"Welcome Aboard,\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.para1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Sign in to continue\"), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    textContentType: \"emailAddress\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return textInputChange(val);\n    },\n    onEndEditing: function onEndEditing(e) {\n      return handleValidUser(e.nativeEvent.text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), data.isValidUser ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"email must be 4 characters long.\")), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    textContentType: \"password\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return handlePasswordChange(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), data.isValidPassword ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Password must be 8 characters long.\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Forgot password?\")), React.createElement(Button, {\n    title: \"Sign In\",\n    type: \"submit\",\n    onPress: function onPress() {\n      loginHandle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Sign out\",\n    onPress: function onPress() {\n      AsyncStorage.clear();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.signUpText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.smallText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"Don't have an account?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"SignUp\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Sign up now\")))));\n}\nvar styles = StyleSheet.create({\n  image: {\n    height: Dimensions.get(\"screen\").width,\n    width: Dimensions.get(\"screen\").width,\n    backgroundColor: \"lightgray\"\n  },\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1\n  },\n  para1: {\n    marginBottom: Dimensions.get(\"screen\").width * 0.08\n  },\n  signUpText: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: Dimensions.get(\"screen\").width * 0.04\n  },\n  smallText: {\n    fontSize: 10\n  },\n  forgot: {\n    fontSize: 10,\n    textDecorationLine: \"underline\",\n    marginBottom: Dimensions.get(\"screen\").width * 0.08\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/screens/signIn/SignIn.js"],"names":["React","AuthContext","Users","H1","AsyncStorage","TextInput","SignIn","navigation","useContext","signIn","useState","email","password","isValidUser","isValidPassword","data","setData","textInputChange","val","trim","length","handlePasswordChange","handleValidUser","loginHandle","Alert","alert","text","fetch","method","headers","Accept","body","JSON","stringify","response","json","res","status","accessToken","token","navigate","screen","error","console","log","styles","image","para1","e","nativeEvent","errorMsg","forgot","clear","signUpText","smallText","StyleSheet","create","height","Dimensions","get","width","backgroundColor","marginLeft","marginTop","marginBottom","display","flexDirection","justifyContent","fontSize","textDecorationLine"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { AuthContext } from \"../../Context\";\nimport {\n  Text,\n  ScrollView,\n  Image,\n  StyleSheet,\n  Dimensions,\n  View,\n  TouchableOpacity,\n  Button,\n  Alert,\n} from \"react-native\";\nimport Users from \"../../Users\";\nimport H1 from \"../../texts/H1\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nimport { TextInput } from \"react-native-paper\";\n\nexport default function SignIn({ navigation }) {\n  const { signIn } = React.useContext(AuthContext);\n\n  const [data, setData] = React.useState({\n    email: \"\",\n    password: \"\",\n    // check_textInputChange: false,\n    // secureTextEntry: true,\n    isValidUser: true,\n    isValidPassword: true,\n  });\n\n  const textInputChange = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        email: val,\n        // check_textInputChange: true,\n        isValidUser: true,\n      });\n    } else {\n      setData({\n        ...data,\n        email: val,\n        // check_textInputChange: false,\n        isValidUser: false,\n      });\n    }\n  };\n\n  const handlePasswordChange = (val) => {\n    if (val.trim().length >= 8) {\n      setData({\n        ...data,\n        password: val,\n        isValidPassword: true,\n      });\n    } else {\n      setData({\n        ...data,\n        password: val,\n        isValidPassword: false,\n      });\n    }\n  };\n\n  const handleValidUser = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        isValidUser: true,\n      });\n    } else {\n      setData({\n        ...data,\n        isValidUser: false,\n      });\n    }\n  };\n\n  const loginHandle = async () => {\n    if (data.email.length == 0 || data.password.length == 0) {\n      Alert.alert(\"Wrong Input!\", \"email or password field cannot be empty.\", [\n        { text: \"Okay\" },\n      ]);\n      return;\n    }\n\n    try {\n      let response = await fetch(\"http://localhost:5000/api/customers/login\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: data.email,\n          password: data.password,\n        }),\n      });\n\n      const res = await response.json();\n\n      if (response.status >= 200 && response.status < 300) {\n        let accessToken = res.token;\n\n        signIn(accessToken);\n        Alert.alert(\"Done\", \"user logged In\", [{ text: \"Okay\" }]);\n        navigation.navigate(\"Root\", { screen: \"Footer\" });\n      } else {\n        Alert.alert(\"Invalid User!\", \"email or password is incorrect.\", [\n          { text: \"Okay\" },\n        ]);\n\n        let error = res;\n        throw error;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <ScrollView>\n      <Image style={styles.image} />\n      <ScrollView style={styles.body}>\n        <H1 h1Text=\"Welcome Aboard,\" />\n        <Text style={styles.para1}>Sign in to continue</Text>\n        <TextInput\n          placeholder={\"Email\"}\n          textContentType={\"emailAddress\"}\n          autoCapitalize=\"none\"\n          onChangeText={(val) => textInputChange(val)}\n          onEndEditing={(e) => handleValidUser(e.nativeEvent.text)}\n        />\n        {data.isValidUser ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              email must be 4 characters long.\n            </Text>\n          </View>\n        )}\n        <TextInput\n          placeholder={\"Password\"}\n          textContentType={\"password\"}\n          secureTextEntry={true}\n          autoCapitalize=\"none\"\n          onChangeText={(val) => handlePasswordChange(val)}\n        />\n        {data.isValidPassword ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              Password must be 8 characters long.\n            </Text>\n          </View>\n        )}\n        <TouchableOpacity>\n          <Text style={styles.forgot}>Forgot password?</Text>\n        </TouchableOpacity>\n        <Button\n          title=\"Sign In\"\n          type=\"submit\"\n          onPress={() => {\n            loginHandle();\n          }}\n        />\n        <Button\n          title=\"Sign out\"\n          onPress={() => {\n            AsyncStorage.clear();\n          }}\n        />\n        <View style={styles.signUpText}>\n          <Text style={styles.smallText}>Don't have an account?</Text>\n\n          <TouchableOpacity onPress={() => navigation.navigate(\"SignUp\")}>\n            <Text style={styles.forgot}>Sign up now</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    height: Dimensions.get(\"screen\").width,\n    width: Dimensions.get(\"screen\").width,\n    backgroundColor: \"lightgray\",\n  },\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1,\n  },\n  para1: {\n    marginBottom: Dimensions.get(\"screen\").width * 0.08,\n  },\n  signUpText: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: Dimensions.get(\"screen\").width * 0.04,\n  },\n  smallText: {\n    fontSize: 10,\n  },\n  forgot: {\n    fontSize: 10,\n    textDecorationLine: \"underline\",\n    marginBottom: Dimensions.get(\"screen\").width * 0.08,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}