{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/screens/profileScreens/EditCustomer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport H1 from \"../../texts/H1\";\nimport { putCustomerInfo } from \"../../../services/api\";\nimport { getCustomerInfo } from \"../../../services/api\";\nexport default function EditCustomer(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    isValidUser: true,\n    isValidFirst: true,\n    isValidLast: true,\n    isValidPhone: true,\n    isValidPassword: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      firstName = _React$useState4[0],\n      setFirstName = _React$useState4[1];\n\n  useEffect(function () {\n    getCustomerInfo().then(function (res) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        firstName: res.firstName,\n        lastName: res.lastName,\n        phoneNumber: res.phoneNumber,\n        email: res.email,\n        password: res.password\n      }));\n    }, function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  var textInputChange = function textInputChange(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        email: val,\n        isValidUser: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        email: val,\n        isValidUser: false\n      }));\n    }\n  };\n\n  var textInputFirstChange = function textInputFirstChange(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        firstName: val,\n        isValidFirst: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        firstName: val,\n        isValidFirst: false\n      }));\n    }\n  };\n\n  var textInputLastChange = function textInputLastChange(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        lastName: val,\n        isValidLast: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        lastName: val,\n        isValidLast: false\n      }));\n    }\n  };\n\n  var textInputPhoneChange = function textInputPhoneChange(val) {\n    if (val.trim().length >= 6) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        phoneNumber: val,\n        isValidPhone: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        phoneNumber: val,\n        isValidPhone: false\n      }));\n    }\n  };\n\n  var handlePasswordChange = function handlePasswordChange(val) {\n    if (val.trim().length >= 8) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        password: val,\n        isValidPassword: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        password: val,\n        isValidPassword: false\n      }));\n    }\n  };\n\n  var handleValidUser = function handleValidUser(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidUser: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidUser: false\n      }));\n    }\n  };\n\n  var handleValidFirst = function handleValidFirst(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidFirst: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidFirst: false\n      }));\n    }\n  };\n\n  var handleValidLast = function handleValidLast(val) {\n    if (val.trim().length >= 4) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidLast: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidLast: false\n      }));\n    }\n  };\n\n  var handleValidPhone = function handleValidPhone(val) {\n    if (val.trim().length >= 6) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPhone: true\n      }));\n    } else {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        isValidPhone: false\n      }));\n    }\n  };\n\n  var editCustomerHandle = function editCustomerHandle() {\n    return _regeneratorRuntime.async(function editCustomerHandle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(data.email.length == 0 || data.password.length == 0 || data.firstName.length == 0 || data.lastName.length == 0 || data.phoneNumber.length == 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [{\n              text: \"Okay\"\n            }]);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            putCustomerInfo(data.email, data.password, data.firstName, data.lastName, data.phoneNumber).then(function (res) {\n              console.log(res);\n              Alert.alert(\"User Customer Info saved successfully\", \"Thank you\", [{\n                text: \"Ok\"\n              }]);\n              navigation.navigate(\"Footer\");\n            }, function (err) {\n              console.log(err);\n              Alert.alert(\"Error\", \"Something went wrong! \" + err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, React.createElement(H1, {\n    h1Text: \"Hello\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, firstName)), React.createElement(TextInput, {\n    placeholder: \"First Name\",\n    textContentType: \"name\",\n    autoCapitalize: \"none\",\n    value: data.firstName,\n    onChangeText: function onChangeText(val) {\n      return textInputFirstChange(val);\n    },\n    onEndEditing: function onEndEditing(e) {\n      return handleValidFirst(e.nativeEvent.text);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), data.isValidFirst ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"First Name must be 4 characters long.\")), React.createElement(TextInput, {\n    placeholder: \"Last Name\",\n    textContentType: \"name\",\n    autoCapitalize: \"none\",\n    value: data.lastName,\n    onChangeText: function onChangeText(val) {\n      return textInputLastChange(val);\n    },\n    onEndEditing: function onEndEditing(e) {\n      return handleValidLast(e.nativeEvent.text);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }), data.isValidLast ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"Last Name must be 4 characters long.\")), React.createElement(TextInput, {\n    placeholder: \"Phone Number\",\n    textContentType: \"name\",\n    autoCapitalize: \"none\",\n    value: data.phoneNumber,\n    onChangeText: function onChangeText(val) {\n      return textInputPhoneChange(val);\n    },\n    onEndEditing: function onEndEditing(e) {\n      return handleValidPhone(e.nativeEvent.text);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }), data.isValidPhone ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"Phone Number should be more than 6 digits.\")), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    textContentType: \"emailAddress\",\n    autoCapitalize: \"none\",\n    value: data.email,\n    onChangeText: function onChangeText(val) {\n      return textInputChange(val);\n    },\n    onEndEditing: function onEndEditing(e) {\n      return handleValidUser(e.nativeEvent.text);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }), data.isValidUser ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"email must be 4 characters long.\")), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    textContentType: \"password\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(val) {\n      return handlePasswordChange(val);\n    },\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }), data.isValidPassword ? null : React.createElement(View, {\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, \"Password must be 8 characters long.\")), React.createElement(Button, {\n    title: \"Save\",\n    type: \"submit\",\n    onPress: function onPress() {\n      editCustomerHandle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  image: {\n    height: Dimensions.get(\"screen\").width * 0.56,\n    width: Dimensions.get(\"screen\").width,\n    backgroundColor: \"lightgray\"\n  },\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1\n  },\n  text: {\n    marginBottom: 20\n  },\n  textInput: {\n    height: Dimensions.get(\"screen\").width * 0.1,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"lightgray\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.01,\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.02,\n    fontSize: 23,\n    borderRadius: 20,\n    paddingLeft: 15\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/screens/profileScreens/EditCustomer.js"],"names":["React","Component","useEffect","NavigationContainer","H1","putCustomerInfo","getCustomerInfo","EditCustomer","navigation","useState","email","password","firstName","lastName","phoneNumber","isValidUser","isValidFirst","isValidLast","isValidPhone","isValidPassword","data","setData","setFirstName","then","res","err","console","log","textInputChange","val","trim","length","textInputFirstChange","textInputLastChange","textInputPhoneChange","handlePasswordChange","handleValidUser","handleValidFirst","handleValidLast","handleValidPhone","editCustomerHandle","Alert","alert","text","navigate","styles","body","e","nativeEvent","textInput","errorMsg","StyleSheet","create","image","height","Dimensions","get","width","backgroundColor","marginLeft","marginTop","marginBottom","marginRight","fontSize","borderRadius","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  ScrollView,\n  Dimensions,\n  Button,\n  TextInput,\n  Alert,\n  Image,\n} from \"react-native\";\nimport H1 from \"../../texts/H1\";\nimport { putCustomerInfo } from \"../../../services/api\";\nimport { getCustomerInfo } from \"../../../services/api\";\n\nexport default function EditCustomer({ navigation }) {\n  const [data, setData] = React.useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    isValidUser: true,\n    isValidFirst: true,\n    isValidLast: true,\n    isValidPhone: true,\n    isValidPassword: true,\n  });\n  const [firstName, setFirstName] = React.useState(null);\n  useEffect(() => {\n    getCustomerInfo().then(\n      (res) => {\n        setData({\n          ...data,\n          firstName: res.firstName,\n          lastName: res.lastName,\n          phoneNumber: res.phoneNumber,\n          email: res.email,\n          password: res.password,\n        });\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }, []);\n\n  const textInputChange = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        email: val,\n        isValidUser: true,\n      });\n    } else {\n      setData({\n        ...data,\n        email: val,\n        isValidUser: false,\n      });\n    }\n  };\n  const textInputFirstChange = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        firstName: val,\n        isValidFirst: true,\n      });\n    } else {\n      setData({\n        ...data,\n        firstName: val,\n        isValidFirst: false,\n      });\n    }\n  };\n  const textInputLastChange = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        lastName: val,\n        isValidLast: true,\n      });\n    } else {\n      setData({\n        ...data,\n        lastName: val,\n        isValidLast: false,\n      });\n    }\n  };\n  const textInputPhoneChange = (val) => {\n    if (val.trim().length >= 6) {\n      setData({\n        ...data,\n        phoneNumber: val,\n        isValidPhone: true,\n      });\n    } else {\n      setData({\n        ...data,\n        phoneNumber: val,\n        isValidPhone: false,\n      });\n    }\n  };\n\n  const handlePasswordChange = (val) => {\n    if (val.trim().length >= 8) {\n      setData({\n        ...data,\n        password: val,\n        isValidPassword: true,\n      });\n    } else {\n      setData({\n        ...data,\n        password: val,\n        isValidPassword: false,\n      });\n    }\n  };\n\n  const handleValidUser = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        isValidUser: true,\n      });\n    } else {\n      setData({\n        ...data,\n        isValidUser: false,\n      });\n    }\n  };\n  const handleValidFirst = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        isValidFirst: true,\n      });\n    } else {\n      setData({\n        ...data,\n        isValidFirst: false,\n      });\n    }\n  };\n  const handleValidLast = (val) => {\n    if (val.trim().length >= 4) {\n      setData({\n        ...data,\n        isValidLast: true,\n      });\n    } else {\n      setData({\n        ...data,\n        isValidLast: false,\n      });\n    }\n  };\n\n  const handleValidPhone = (val) => {\n    if (val.trim().length >= 6) {\n      setData({\n        ...data,\n        isValidPhone: true,\n      });\n    } else {\n      setData({\n        ...data,\n        isValidPhone: false,\n      });\n    }\n  };\n\n  const editCustomerHandle = async () => {\n    if (\n      data.email.length == 0 ||\n      data.password.length == 0 ||\n      data.firstName.length == 0 ||\n      data.lastName.length == 0 ||\n      data.phoneNumber.length == 0\n    ) {\n      Alert.alert(\"Wrong Input!\", \"fields cannot be empty.\", [\n        { text: \"Okay\" },\n      ]);\n      return;\n    }\n\n    putCustomerInfo(\n      data.email,\n      data.password,\n      data.firstName,\n      data.lastName,\n      data.phoneNumber\n    ).then(\n      (res) => {\n        console.log(res);\n        Alert.alert(\"User Customer Info saved successfully\", \"Thank you\", [\n          { text: \"Ok\" },\n        ]);\n        navigation.navigate(\"Footer\");\n      },\n      (err) => {\n        console.log(err);\n        Alert.alert(\"Error\", `Something went wrong! ${err}`);\n      }\n    );\n  };\n\n  return (\n    <ScrollView>\n      <View style={styles.body}>\n        <View style={styles.text}>\n          <H1 h1Text=\"Hello\" />\n          <Text>{firstName}</Text>\n        </View>\n        <TextInput\n          placeholder={\"First Name\"}\n          textContentType={\"name\"}\n          autoCapitalize=\"none\"\n          value={data.firstName}\n          onChangeText={(val) => textInputFirstChange(val)}\n          onEndEditing={(e) => handleValidFirst(e.nativeEvent.text)}\n          style={styles.textInput}\n        />\n        {data.isValidFirst ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              First Name must be 4 characters long.\n            </Text>\n          </View>\n        )}\n        <TextInput\n          placeholder={\"Last Name\"}\n          textContentType={\"name\"}\n          autoCapitalize=\"none\"\n          value={data.lastName}\n          onChangeText={(val) => textInputLastChange(val)}\n          onEndEditing={(e) => handleValidLast(e.nativeEvent.text)}\n          style={styles.textInput}\n        />\n        {data.isValidLast ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              Last Name must be 4 characters long.\n            </Text>\n          </View>\n        )}\n        <TextInput\n          placeholder={\"Phone Number\"}\n          textContentType={\"name\"}\n          autoCapitalize=\"none\"\n          value={data.phoneNumber}\n          onChangeText={(val) => textInputPhoneChange(val)}\n          onEndEditing={(e) => handleValidPhone(e.nativeEvent.text)}\n          style={styles.textInput}\n        />\n        {data.isValidPhone ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              Phone Number should be more than 6 digits.\n            </Text>\n          </View>\n        )}\n        <TextInput\n          placeholder={\"Email\"}\n          textContentType={\"emailAddress\"}\n          autoCapitalize=\"none\"\n          value={data.email}\n          onChangeText={(val) => textInputChange(val)}\n          onEndEditing={(e) => handleValidUser(e.nativeEvent.text)}\n          style={styles.textInput}\n        />\n        {data.isValidUser ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              email must be 4 characters long.\n            </Text>\n          </View>\n        )}\n        <TextInput\n          placeholder={\"Password\"}\n          textContentType={\"password\"}\n          secureTextEntry={true}\n          autoCapitalize=\"none\"\n          onChangeText={(val) => handlePasswordChange(val)}\n          style={styles.textInput}\n        />\n        {data.isValidPassword ? null : (\n          <View duration={500}>\n            <Text style={styles.errorMsg}>\n              Password must be 8 characters long.\n            </Text>\n          </View>\n        )}\n\n        <Button\n          title=\"Save\"\n          type=\"submit\"\n          onPress={() => {\n            editCustomerHandle();\n          }}\n        />\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    height: Dimensions.get(\"screen\").width * 0.56,\n    width: Dimensions.get(\"screen\").width,\n    backgroundColor: \"lightgray\",\n  },\n  body: {\n    width: Dimensions.get(\"screen\").width * 0.8,\n    // backgroundColor: \"lightgreen\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.1,\n    marginTop: Dimensions.get(\"screen\").width * 0.1,\n  },\n  text: {\n    marginBottom: 20,\n  },\n  textInput: {\n    height: Dimensions.get(\"screen\").width * 0.1,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    backgroundColor: \"lightgray\",\n    marginLeft: Dimensions.get(\"screen\").width * 0.01,\n    marginRight: Dimensions.get(\"screen\").width * 0.01,\n    marginTop: Dimensions.get(\"screen\").width * 0.02,\n    marginBottom: Dimensions.get(\"screen\").width * 0.02,\n    fontSize: 23,\n    borderRadius: 20,\n    paddingLeft: 15,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}