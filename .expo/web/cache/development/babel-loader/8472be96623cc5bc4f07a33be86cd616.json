{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/tabs/OrderTab.js\";\n\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport H1 from \"../texts/H1\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport ActiveOrder from \"./ActiveOrder\";\nimport OrderHistory from \"./OrderHistory\";\nimport ActiveOrderMade from \"./ActiveOrderMade\";\nimport OrderHistoryMade from \"./OrderHistoryMade\";\nimport { getCustomerActiveOrders } from \"../../services/api\";\nimport { set } from \"react-native-reanimated\";\nimport moment from \"moment\";\nvar MaterialTopTabs = createMaterialTopTabNavigator();\n\nvar OrderTab = function OrderTab(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoaded = _React$useState2[0],\n      setIsLoaded = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      activeOrders = _React$useState4[0],\n      setActiveOrders = _React$useState4[1];\n\n  var _React$useState5 = React.useState(1),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      orderStatus = _React$useState6[0],\n      setOrderStatus = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      countOrderStatus = _React$useState8[0],\n      setCountOrderStatus = _React$useState8[1];\n\n  var isFocused = useIsFocused();\n  useEffect(function () {\n    getCustomerActiveOrders().then(function (res) {\n      setActiveOrders(res);\n      setOrderStatus(res[res.length - 1].orderStatusID);\n\n      if (res.length === 0) {\n        setIsLoaded(true);\n      } else {\n        setIsLoaded(false);\n      }\n    }), function (err) {\n      console.log(err);\n    };\n  }, [activeOrders, orderStatus]);\n\n  var createTopTabs = function createTopTabs() {\n    return React.createElement(MaterialTopTabs.Navigator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, React.createElement(MaterialTopTabs.Screen, {\n      name: \"Active Orders\",\n      children: function children() {\n        return React.createElement(ActiveOrder, {\n          onHandleOrder: props.onHandleOrderNow,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), React.createElement(MaterialTopTabs.Screen, {\n      name: \"Order History\",\n      children: function children() {\n        return React.createElement(OrderHistory, {\n          onHandleOrder: props.onHandleOrderNow,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderOrders = function renderOrders() {\n    return activeOrders.map(function (item) {\n      var handleOrderDetail = function handleOrderDetail() {\n        props.onHandleActiveOrderStatus(item.orderStatusID, item.orderID);\n      };\n\n      var date = moment(item.createdAt).format(\"h:mm a - YYYY.MM.DD \");\n\n      if (item.orderStatusID < 4) {\n        return React.createElement(TouchableOpacity, {\n          onPress: handleOrderDetail,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }\n        }, date), React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }\n        }, item.orderStatusDescription), React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }\n        }, \"View Details\")));\n      }\n    });\n  };\n\n  var renderOrdersHistory = function renderOrdersHistory() {\n    return activeOrders.map(function (item) {\n      var handleOrderDetail = function handleOrderDetail() {\n        props.onHandleOrderHistoryDetails(item.orderID);\n      };\n\n      if (item.orderStatusID > 3) {\n        return React.createElement(TouchableOpacity, {\n          onPress: handleOrderDetail,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }\n        }, item.menuName), React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }\n        }, item.restaurantID), React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }\n        }, item.price)));\n      }\n    });\n  };\n\n  var createTopTabsOrderMade = function createTopTabsOrderMade() {\n    return React.createElement(MaterialTopTabs.Navigator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, React.createElement(MaterialTopTabs.Screen, {\n      name: \"Active Orders\",\n      children: function children() {\n        return React.createElement(ActiveOrderMade, {\n          onRenderOrders: renderOrders,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), React.createElement(MaterialTopTabs.Screen, {\n      name: \"Order History\",\n      children: function children() {\n        return React.createElement(OrderHistoryMade, {\n          onRenderOrders: renderOrdersHistory,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  if (isLoaded) {\n    return React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, React.createElement(NavigationContainer, {\n      independent: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, createTopTabs()));\n  } else {\n    return React.createElement(ScrollView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, React.createElement(NavigationContainer, {\n      independent: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, createTopTabsOrderMade()));\n  }\n};\n\nexport default OrderTab;\nexport var styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    margin: 24,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 36,\n    marginBottom: 16\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/tabs/OrderTab.js"],"names":["React","useEffect","useIsFocused","H1","NavigationContainer","createMaterialTopTabNavigator","ActiveOrder","OrderHistory","ActiveOrderMade","OrderHistoryMade","getCustomerActiveOrders","set","moment","MaterialTopTabs","OrderTab","props","useState","isLoaded","setIsLoaded","activeOrders","setActiveOrders","orderStatus","setOrderStatus","countOrderStatus","setCountOrderStatus","isFocused","then","res","length","orderStatusID","err","console","log","createTopTabs","onHandleOrderNow","renderOrders","map","item","handleOrderDetail","onHandleActiveOrderStatus","orderID","date","createdAt","format","orderStatusDescription","renderOrdersHistory","onHandleOrderHistoryDetails","menuName","restaurantID","price","createTopTabsOrderMade","styles","StyleSheet","create","center","flex","margin","justifyContent","alignItems","title","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  ScrollView,\n  TouchableOpacity, Button\n} from \"react-native\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport H1 from \"../texts/H1\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport ActiveOrder from \"./ActiveOrder\";\nimport OrderHistory from \"./OrderHistory\";\nimport ActiveOrderMade from \"./ActiveOrderMade\";\nimport OrderHistoryMade from \"./OrderHistoryMade\";\nimport { getCustomerActiveOrders } from \"../../services/api\";\nimport { set } from \"react-native-reanimated\";\nimport moment from \"moment\";\n\nconst MaterialTopTabs = createMaterialTopTabNavigator();\n\nconst OrderTab = (props) => {\n  const [isLoaded, setIsLoaded] = React.useState(true);\n  const [activeOrders, setActiveOrders] = React.useState(null);\n  const [orderStatus, setOrderStatus] = React.useState(1);\n  const [countOrderStatus, setCountOrderStatus] = React.useState(0);\n  const isFocused = useIsFocused();\n\n  // console.log(isFocused);\n  // const handleOrderStausID = (orderID) => {\n  //   setOrderStatus(orderID)\n  // }\n  useEffect(() => {\n    getCustomerActiveOrders().then((res) => {\n      // console.log(res)\n      setActiveOrders(res);\n      setOrderStatus(res[res.length - 1].orderStatusID);\n      if (res.length === 0) {\n        setIsLoaded(true);\n      } else {\n        // for(let i=0; i<res.length; i++){\n        //   if(res[i].orderStatusID !== 1){\n        //     setOrderStatus(res[i].orderStatusID)\n        //     setCountOrderStatus(countOrderStatus + 1)\n        //   }\n        // }\n        setIsLoaded(false);\n      }\n    }),\n      (err) => {\n        console.log(err);\n      };\n  }, [activeOrders, orderStatus]);\n\n  const createTopTabs = () => {\n    return (\n      <MaterialTopTabs.Navigator>\n        <MaterialTopTabs.Screen\n          name=\"Active Orders\"\n          children={() => (\n            <ActiveOrder onHandleOrder={props.onHandleOrderNow} />\n          )}\n        />\n        <MaterialTopTabs.Screen\n          name=\"Order History\"\n          children={() => (\n            <OrderHistory onHandleOrder={props.onHandleOrderNow} />\n          )}\n        />\n      </MaterialTopTabs.Navigator>\n    );\n  };\n\n  const renderOrders = () => {\n    //   console.log(props.customerActiveOrders)\n   \n    return activeOrders.map((item) => {\n      const handleOrderDetail = () => {\n        props.onHandleActiveOrderStatus(item.orderStatusID, item.orderID);\n      };\n      const date = moment(item.createdAt).format(\"h:mm a - YYYY.MM.DD \");\n      if (item.orderStatusID < 4) {\n        return (\n          <TouchableOpacity onPress={handleOrderDetail}>\n            <View>\n              <Text>{date}</Text>\n              <Text>{item.orderStatusDescription}</Text>\n              <Text>View Details</Text>\n            </View>\n          </TouchableOpacity>\n        );\n      }\n\n    });\n  };\n\n  const renderOrdersHistory = () => {\n    return activeOrders.map((item) => {\n      const handleOrderDetail = () => {\n        props.onHandleOrderHistoryDetails(item.orderID);\n      };\n      if (item.orderStatusID > 3) {\n        \n        return (\n          <TouchableOpacity onPress={handleOrderDetail}>\n            <View>\n              <Text>{item.menuName}</Text>\n              <Text>{item.restaurantID}</Text>\n              <Text>{item.price}</Text>\n            </View>\n          </TouchableOpacity>\n        );\n      }\n    });\n  };\n\n  const createTopTabsOrderMade = () => {\n    // console.log(\"i m here\")\n    // console.log(activeOrders)\n    return (\n      <MaterialTopTabs.Navigator>\n        <MaterialTopTabs.Screen\n          name=\"Active Orders\"\n          children={() => (\n            <ActiveOrderMade\n              // customerActiveOrders = {activeOrders}\n              onRenderOrders={renderOrders}\n              // changeOrderStatusID={handleOrderStausID()}\n            />\n          )}\n        />\n        <MaterialTopTabs.Screen\n          name=\"Order History\"\n          children={() => (\n            <OrderHistoryMade onRenderOrders={renderOrdersHistory} />\n          )}\n        />\n      </MaterialTopTabs.Navigator>\n    );\n  };\n  if (isLoaded) {\n    return (\n      <ScrollView>\n        <NavigationContainer independent={true}>\n          {createTopTabs()}\n        </NavigationContainer>\n      </ScrollView>\n    );\n  } else {\n    return (\n      <ScrollView>\n        <NavigationContainer independent={true}>\n          {createTopTabsOrderMade()}\n        </NavigationContainer>\n      </ScrollView>\n    );\n  }\n};\n\nexport default OrderTab;\n\nexport const styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    margin: 24,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontSize: 36,\n    marginBottom: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}