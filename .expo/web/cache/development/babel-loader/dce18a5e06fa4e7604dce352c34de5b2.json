{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/arjun/Desktop/taste-it-customer/components/screens/onboardingScreens/DeliveryInfo.js\";\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport H1 from \"../../texts/H1\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nvar countries = [{\n  value: \"Canada\",\n  label: \"Canada\"\n}, {\n  value: \"USA\",\n  label: \"USA\"\n}, {\n  value: \"UK\",\n  label: \"UK\"\n}];\nvar provinces = [{\n  value: \"British Columbia\",\n  label: \"BC\"\n}, {\n  value: \"Ontario\",\n  label: \"ON\"\n}, {\n  value: \"Alberta\",\n  label: \"AB\"\n}];\nvar cities = [{\n  value: \"Vancouver\",\n  label: \"Vancouver\"\n}, {\n  value: \"Burnaby\",\n  label: \"Burnaby\"\n}, {\n  value: \"Surrey\",\n  label: \"Surrey\"\n}, {\n  value: \"Richmond\",\n  label: \"Richmond\"\n}];\nvar useStyles = makeStyles({\n  inputField: {\n    borderRadius: 20,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    paddingLeft: 1,\n    marginBottom: 20\n  }\n});\nexport default function DeliveryInfo() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(\"null\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      country = _React$useState2[0],\n      setCountry = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"null\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      province = _React$useState4[0],\n      setProvince = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"null\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      city = _React$useState6[0],\n      setCity = _React$useState6[1];\n\n  var handleChange1 = function handleChange1(event) {\n    setCountry(event.target.value);\n  };\n\n  var handleChange2 = function handleChange2(event) {\n    setProvince(event.target.value);\n  };\n\n  var handleChange3 = function handleChange3(event) {\n    setCity(event.target.value);\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(H1, {\n    h1Text: \"Delivery Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"You say when and where\")), React.createElement(TextField, {\n    id: \"select-country\",\n    select: true,\n    label: \"Country\",\n    value: country,\n    onChange: handleChange1,\n    variant: \"outlined\",\n    InputProps: {\n      className: classes.inputField\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, countries.map(function (option) {\n    return React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, option.label);\n  })), React.createElement(TextField, {\n    id: \"select-province\",\n    select: true,\n    label: \"Province\",\n    value: province,\n    onChange: handleChange2,\n    variant: \"outlined\",\n    InputProps: {\n      className: classes.inputField\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, provinces.map(function (option) {\n    return React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, option.label);\n  })), React.createElement(TextField, {\n    id: \"select-city\",\n    select: true,\n    label: \"City\",\n    value: city,\n    onChange: handleChange3,\n    variant: \"outlined\",\n    InputProps: {\n      className: classes.inputField\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, cities.map(function (option) {\n    return React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, option.label);\n  })), React.createElement(TextInput, {\n    placeholder: \"Address\",\n    textContentType: \"fullStreetAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Postcode\",\n    textContentType: \"postalCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Delivery Instruction\",\n    textContentType: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Done\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  text: {\n    marginTop: 30,\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["/Users/arjun/Desktop/taste-it-customer/components/screens/onboardingScreens/DeliveryInfo.js"],"names":["React","Component","H1","makeStyles","TextField","MenuItem","countries","value","label","provinces","cities","useStyles","inputField","borderRadius","width","Dimensions","get","paddingLeft","marginBottom","DeliveryInfo","classes","useState","country","setCountry","province","setProvince","city","setCity","handleChange1","event","target","handleChange2","handleChange3","styles","text","className","map","option","StyleSheet","create","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  ScrollView,\n  Dimensions,\n  Button,\n} from \"react-native\";\nimport H1 from \"../../texts/H1\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst countries = [\n  {\n    value: \"Canada\",\n    label: \"Canada\",\n  },\n  {\n    value: \"USA\",\n    label: \"USA\",\n  },\n  {\n    value: \"UK\",\n    label: \"UK\",\n  },\n];\n\nconst provinces = [\n  {\n    value: \"British Columbia\",\n    label: \"BC\",\n  },\n  {\n    value: \"Ontario\",\n    label: \"ON\",\n  },\n  {\n    value: \"Alberta\",\n    label: \"AB\",\n  },\n];\n\nconst cities = [\n  {\n    value: \"Vancouver\",\n    label: \"Vancouver\",\n  },\n  {\n    value: \"Burnaby\",\n    label: \"Burnaby\",\n  },\n  {\n    value: \"Surrey\",\n    label: \"Surrey\",\n  },\n  {\n    value: \"Richmond\",\n    label: \"Richmond\",\n  },\n];\n\nconst useStyles = makeStyles({\n  inputField: {\n    borderRadius: 20,\n    width: Dimensions.get(\"screen\").width * 0.8,\n    paddingLeft: 1,\n    marginBottom: 20,\n  },\n});\n\nexport default function DeliveryInfo() {\n  const classes = useStyles();\n  const [country, setCountry] = React.useState(\"null\");\n  const [province, setProvince] = React.useState(\"null\");\n  const [city, setCity] = React.useState(\"null\");\n\n  const handleChange1 = (event) => {\n    setCountry(event.target.value);\n  };\n\n  const handleChange2 = (event) => {\n    setProvince(event.target.value);\n  };\n\n  const handleChange3 = (event) => {\n    setCity(event.target.value);\n  };\n  return (\n    <ScrollView>\n      <View style={styles.text}>\n        <H1 h1Text=\"Delivery Information\" />\n        <Text>You say when and where</Text>\n      </View>\n      <TextField\n        id=\"select-country\"\n        select\n        label=\"Country\"\n        value={country}\n        onChange={handleChange1}\n        variant=\"outlined\"\n        InputProps={{\n          className: classes.inputField,\n        }}\n      >\n        {countries.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        id=\"select-province\"\n        select\n        label=\"Province\"\n        value={province}\n        onChange={handleChange2}\n        variant=\"outlined\"\n        InputProps={{\n          className: classes.inputField,\n        }}\n      >\n        {provinces.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        id=\"select-city\"\n        select\n        label=\"City\"\n        value={city}\n        onChange={handleChange3}\n        variant=\"outlined\"\n        InputProps={{\n          className: classes.inputField,\n        }}\n      >\n        {cities.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextInput\n        placeholder={\"Address\"}\n        textContentType={\"fullStreetAddress\"}\n      />\n\n      <TextInput placeholder={\"Postcode\"} textContentType={\"postalCode\"} />\n\n      <TextInput\n        placeholder={\"Delivery Instruction\"}\n        textContentType={\"none\"}\n      />\n\n      <Button title=\"Done\" />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 30,\n    marginBottom: 30,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}